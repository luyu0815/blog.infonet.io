<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GB 与 GiB 的区别</title>
    <url>/2019/03/29/GB-%E4%B8%8E-GiB-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h1 id="计算机、单位、二进制"><a href="#计算机、单位、二进制" class="headerlink" title="计算机、单位、二进制"></a>计算机、单位、二进制</h1><ul>
<li><strong>KB</strong> 是 kilobyte 的缩写，指的是千字节。</li>
</ul>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">1KB</td>
<td align="center">1000Byte</td>
</tr>
<tr>
<td align="center">1MB</td>
<td align="center">1000KB</td>
</tr>
<tr>
<td align="center">1GB</td>
<td align="center">1000MB</td>
</tr>
</tbody></table>
<ul>
<li><strong>KiB</strong> 是 kilo binary byte 的缩写，指的是一千个二进制字节。</li>
</ul>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">1KiB</td>
<td align="center">1024Byte</td>
</tr>
<tr>
<td align="center">1MiB</td>
<td align="center">1024KiB</td>
</tr>
<tr>
<td align="center">1GiB</td>
<td align="center">1024MiB</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>单位</tag>
      </tags>
  </entry>
  <entry>
    <title>2019年深圳百公里前行</title>
    <url>/2019/03/23/2019%E5%B9%B4%E6%B7%B1%E5%9C%B3%E7%99%BE%E5%85%AC%E9%87%8C%E5%89%8D%E8%A1%8C/</url>
    <content><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><p>我们今年还是走的磨坊 2016 年的徒步路线，此路线是非常金典的，路线经过南山 -&gt; 福田 -&gt; 罗湖 -&gt; 龙岗 -&gt; 盐田。<br>沿途风景有深圳湾、红树林、市内公园、笔架山公园、东湖公园、梧桐山、大梅沙…等。<br>废话不多说了，先上路线图吧。<br><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-map.jpg" alt="2019-100km-map"></p>
<span id="more"></span>

<h1 id="2-前行"><a href="#2-前行" class="headerlink" title="2. 前行"></a>2. 前行</h1><h2 id="0KM，深圳湾公园集合出发"><a href="#0KM，深圳湾公园集合出发" class="headerlink" title="0KM，深圳湾公园集合出发"></a>0KM，深圳湾公园集合出发</h2><p>2019年3月16日早上10点，深圳湾公园集合出发。今天的天气很不错，不热也不冷，非常适合徒步。（为了这活动还专门请了两天假，哈哈）</p>
<p><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-1.jpg" alt="2019-100km-1"></p>
<p><em>拍了这张图，然后我发到朋友圈，很多朋友都说我长胖了，其实只是胖了一点，这个是拍照角度有问题，目前体重在 62-65KG 之间浮动。哈哈。</em></p>
<h2 id="15KM，上沙附近吃午饭"><a href="#15KM，上沙附近吃午饭" class="headerlink" title="15KM，上沙附近吃午饭"></a>15KM，上沙附近吃午饭</h2><p>中途休息，这次先用的 KEEP 这个垃圾轨迹记录软件，刚开始还挺好的，走着走着软件交互就没有反应了。然后换了个软件叫#两步路(户外助手)#，这个软件感觉还是挺好用的，还可以导入路线轨迹。</p>
<p><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-2.jpg" alt="2019-100km-2"></p>
<h2 id="35KM，东湖公园打卡"><a href="#35KM，东湖公园打卡" class="headerlink" title="35KM，东湖公园打卡"></a>35KM，东湖公园打卡</h2><p><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-3.jpg" alt="2019-100km-3"></p>
<h2 id="48KM，梧桐山脚下打卡"><a href="#48KM，梧桐山脚下打卡" class="headerlink" title="48KM，梧桐山脚下打卡"></a>48KM，梧桐山脚下打卡</h2><p><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-4.jpg" alt="2019-100km-4"></p>
<h2 id="65KM，盐田港打卡"><a href="#65KM，盐田港打卡" class="headerlink" title="65KM，盐田港打卡"></a>65KM，盐田港打卡</h2><p>凌晨5点的盐田港</p>
<p><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-5.jpg" alt="2019-100km-5"></p>
<h2 id="71KM，大梅沙滨海公园打卡"><a href="#71KM，大梅沙滨海公园打卡" class="headerlink" title="71KM，大梅沙滨海公园打卡"></a>71KM，大梅沙滨海公园打卡</h2><p>2019年3月17日早上7点20时的大梅沙公园</p>
<p><img src="https://file.infonet.io/blog-files/SZ-2019-100km/2019-100km-6.jpg" alt="2019-100km-6"></p>
<p>今年的状态不好，脚受伤了，实在前进不了了，在永和大王吃了油条豆浆早餐，回家明年再战！</p>
<h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h1><p>深圳百公算上今年的一共参加3次，2016年（15KM）、2018年（大概75KM）、2019年（大概71KM）。<br>今年的百公里还没有去年走的多，2018 年至 2019 年平时基本上没怎么运动，这次大动作之后身体有些不适，如脚疼，腰酸。<br>生命在于运动，以后要加强锻炼。</p>
]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 基础命令</title>
    <url>/2019/03/26/Git-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="1-基础命令"><a href="#1-基础命令" class="headerlink" title="1. 基础命令"></a>1. 基础命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen (git 生成 ssh 公钥：id_rsa.pub)</span><br><span class="line">$ git config --global user.name <span class="string">&quot;xxx&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;xxx@xxx.xxx&quot;</span></span><br><span class="line">$ git config --system --list</span><br><span class="line">$ git config --global --list</span><br><span class="line">$ git config --<span class="built_in">local</span>  --list</span><br><span class="line">$ git add .</span><br><span class="line">$ git status  (查看缓存)</span><br><span class="line">$ git commit -m <span class="string">&quot;xxx&quot;</span>  (commit 备注)</span><br><span class="line">$ git commit --amend  (修改上次 commit 备注信息)</span><br><span class="line">$ git reset --hard</span><br><span class="line">$ git reset --hard HEAD~5</span><br><span class="line">$ git clean -dxf  (清理不是 git 管理得文件)</span><br><span class="line">$ git checkout &lt;file&gt;  (丢弃 file 在工作区得修改)</span><br><span class="line">$ git remote add origin &lt;url&gt;  (添加远程仓库)</span><br><span class="line">$ git push -u origin master  (首次推送至远程仓库)</span><br><span class="line">$ git pull &lt;name&gt;  (从指定远程仓库拉取)</span><br><span class="line">$ git branch  (查看分支)</span><br><span class="line">$ git checkout -b &lt;name&gt;  (创建并切换分支)</span><br><span class="line">$ git merge &lt;name&gt;  (合并某分支到当前分支)</span><br><span class="line">$ git branch -d &lt;name&gt;  (删除分支)</span><br><span class="line">$ git pull = $ git fetch + $ git merge  (从远程拉取)</span><br><span class="line">$ git stash -&gt; $ git stash pop (将当前修改存到暂存区 -&gt; 将之前得修改从暂存区恢复)</span><br><span class="line">$ git submodule update --init --recursive  (拉取目录中其他 git 管理的文件)</span><br><span class="line">$ git config --list</span><br><span class="line">$ git config --global core.editor <span class="string">&quot;vim&quot;</span></span><br><span class="line">$ git config --global alias.co checkout</span><br><span class="line">$ git config --global alias.br branch</span><br><span class="line">$ git config --global alias.ci commit</span><br><span class="line">$ git config --global alias.st status</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h1 id="2-常见问题和解决方法"><a href="#2-常见问题和解决方法" class="headerlink" title="2. 常见问题和解决方法"></a>2. 常见问题和解决方法</h1><h2 id="1-分支拷贝"><a href="#1-分支拷贝" class="headerlink" title="1. 分支拷贝"></a>1. 分支拷贝</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># example:</span></span><br><span class="line"><span class="comment">#                             H---I---J topicB</span></span><br><span class="line"><span class="comment">#                            /</span></span><br><span class="line"><span class="comment">#                   E---F---G  topicA</span></span><br><span class="line"><span class="comment">#                  /</span></span><br><span class="line"><span class="comment">#     A---B---C---D  master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># command:</span></span><br><span class="line">$ git rebase --onto master topicA topicB</span><br><span class="line"></span><br><span class="line"><span class="comment"># result:</span></span><br><span class="line"><span class="comment">#                  H&#x27;--I&#x27;--J&#x27;  topicB</span></span><br><span class="line"><span class="comment">#                 /</span></span><br><span class="line"><span class="comment">#                 | E---F---G  topicA</span></span><br><span class="line"><span class="comment">#                 |/</span></span><br><span class="line"><span class="comment">#     A---B---C---D  master</span></span><br></pre></td></tr></table></figure>

<h2 id="2-Fatal-You-are-not-currently-on-a-branch"><a href="#2-Fatal-You-are-not-currently-on-a-branch" class="headerlink" title="2. Fatal: You are not currently on a branch"></a>2. Fatal: You are not currently on a branch</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout -b &lt;new branch&gt;</span><br><span class="line">$ git chechout master</span><br><span class="line">$ git merge &lt;new branch&gt;</span><br><span class="line">$ git branch -d &lt;new branch&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-远程提交比本地新"><a href="#3-远程提交比本地新" class="headerlink" title="3. 远程提交比本地新"></a>3. 远程提交比本地新</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># example:</span></span><br><span class="line"><span class="comment">#     o---remotes/origin/master</span></span><br><span class="line"><span class="comment">#     |</span></span><br><span class="line"><span class="comment">#     o---master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># command:</span></span><br><span class="line">$ git reset --hard origin/master</span><br><span class="line">$ git revert HEAD</span><br><span class="line">$ git push</span><br><span class="line"></span><br><span class="line"><span class="comment"># result:</span></span><br><span class="line"><span class="comment">#     o---master</span></span><br><span class="line"><span class="comment">#     |</span></span><br><span class="line"><span class="comment">#     o---remotes/origin/master</span></span><br></pre></td></tr></table></figure>

<h2 id="4-修改-合并历史-commit-信息"><a href="#4-修改-合并历史-commit-信息" class="headerlink" title="4. 修改/合并历史 commit 信息"></a>4. 修改/合并历史 commit 信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git rebase -i HEAD~3</span><br><span class="line">$ git commit --amend</span><br><span class="line">$ git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure>

<h2 id="5-Windows-系统中-Git-文件差异比较工具为-Meld"><a href="#5-Windows-系统中-Git-文件差异比较工具为-Meld" class="headerlink" title="5. Windows 系统中 Git 文件差异比较工具为 Meld"></a>5. Windows 系统中 Git 文件差异比较工具为 <strong><a href="https://meldmerge.org/">Meld</a></strong></h2><ul>
<li>免费</li>
<li>跨平台</li>
</ul>
<p>Meld 安装路径为：<strong>C:/meld/meld.exe</strong><br>对应修改的文件为：**.gitconfig**</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global merge.tool meld</span><br><span class="line">$ git config --global diff.tool meld</span><br><span class="line">$ git config --global mergetool.meld.path <span class="string">&#x27;/c/meld/meld.exe&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 基础命令</title>
    <url>/2019/09/22/Hexo-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1. 常用命令"></a>1. 常用命令</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span></span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<!---more--->

<h1 id="2-详解"><a href="#2-详解" class="headerlink" title="2. 详解"></a>2. 详解</h1><h2 id="1-新建一篇文章"><a href="#1-新建一篇文章" class="headerlink" title="1. 新建一篇文章"></a>1. 新建一篇文章</h2><p>新建一篇文章,如果没有设置 layout,默认使用 _config.yml 中的 default_layout参数代替。<br>如果 title 中有空格，请使用引号括起来。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] <span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">参数</td>
<td align="center">描述</td>
</tr>
<tr>
<td align="center">-p, –path</td>
<td align="center">自定义新文章的路径</td>
</tr>
<tr>
<td align="center">-r, –replace</td>
<td align="center">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="center">-s, –slug</td>
<td align="center">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<h2 id="2-生成静态文件"><a href="#2-生成静态文件" class="headerlink" title="2. 生成静态文件"></a>2. 生成静态文件</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ hexo genrate</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<h2 id="3-启动服务器"><a href="#3-启动服务器" class="headerlink" title="3. 启动服务器"></a>3. 启动服务器</h2><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<h2 id="4-部署网站"><a href="#4-部署网站" class="headerlink" title="4. 部署网站"></a>4. 部署网站</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">参数</td>
<td align="center">描述</td>
</tr>
<tr>
<td align="center">-g, –generate</td>
<td align="center">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<h2 id="5-清楚缓存文件"><a href="#5-清楚缓存文件" class="headerlink" title="5. 清楚缓存文件"></a>5. 清楚缓存文件</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用总结</title>
    <url>/2020/03/24/Hexo%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="1-开启站点地图"><a href="#1-开启站点地图" class="headerlink" title="1. 开启站点地图"></a>1. 开启站点地图</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启站点地图，需要安装 hexo-generator-sitemap 扩展包</span></span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>

<h1 id="2-开启本地搜索"><a href="#2-开启本地搜索" class="headerlink" title="2. 开启本地搜索"></a>2. 开启本地搜索</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启本地搜索，需要安装 hexo-generator-searchdb 扩展包</span></span><br><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>

<h1 id="3-部署到服务器"><a href="#3-部署到服务器" class="headerlink" title="3. 部署到服务器"></a>3. 部署到服务器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署到服务器，需要安装 npm install hexo-deployer-git --save 扩展包</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h1 id="4-查看-Hexo-运行所需要的依赖"><a href="#4-查看-Hexo-运行所需要的依赖" class="headerlink" title="4. 查看 Hexo 运行所需要的依赖"></a>4. 查看 Hexo 运行所需要的依赖</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm ls --depth 0</span><br><span class="line"><span class="comment"># 如果还想展开一层看看这些模块各自又依赖了哪些模块，那就运行下面的命令</span></span><br><span class="line">npm ls --depth 1</span><br></pre></td></tr></table></figure>

<h1 id="5-卸载-Hexo-category-和-tag-模块"><a href="#5-卸载-Hexo-category-和-tag-模块" class="headerlink" title="5. 卸载 Hexo category 和 tag 模块"></a>5. 卸载 Hexo category 和 tag 模块</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-category</span><br><span class="line">npm uninstall hexo-generator-tag</span><br><span class="line"><span class="comment"># 卸载 category 和 tag 模块</span></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>KiCad 自动生成 BOM 插件路径</title>
    <url>/2019/02/26/KiCad-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90-BOM-%E6%8F%92%E4%BB%B6%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<h1 id="KiCad"><a href="#KiCad" class="headerlink" title="KiCad"></a><a href="https://www.kicad-pcb.org/">KiCad</a></h1><ul>
<li>A Cross Platform and Open Source Electronics Design Automation Suite</li>
<li>免费</li>
<li>跨平台</li>
</ul>
<h2 id="KiCad-v5-0-0-for-Windows"><a href="#KiCad-v5-0-0-for-Windows" class="headerlink" title="KiCad-v5.0.0 for Windows"></a>KiCad-v5.0.0 for Windows</h2><ul>
<li>C:\Program Files\Kicad\bin\scripting\plugins\bom2grouped_csv.xsl</li>
</ul>
<h2 id="KiCad-v5-1-1-for-Linux"><a href="#KiCad-v5-1-1-for-Linux" class="headerlink" title="KiCad-v5.1.1 for Linux"></a>KiCad-v5.1.1 for Linux</h2><ul>
<li>/usr/share/kicad/plugins/bom2grouped_csv.xsl</li>
</ul>
]]></content>
      <tags>
        <tag>KiCad</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 可视文件管理器</title>
    <url>/2019/02/22/Linux-%E5%8F%AF%E8%A7%86%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    <content><![CDATA[<h1 id="1-MC-简介"><a href="#1-MC-简介" class="headerlink" title="1. MC 简介"></a>1. MC 简介</h1><p><a href="midnight-commander.org">GNU Midnight Commander</a> 或者叫 MC 是一个可视文件管理器，根据 GNU 通用公共许可证授权，因此有资格成为自由软件。<br>它是一个功能丰富的全屏文本模式应用程序，允许您复制，移动和删除文件和整个目录树，搜索文件并在子 shell 中运行命令。 包括内部查看器和编辑器。</p>
<h1 id="2-食用方法"><a href="#2-食用方法" class="headerlink" title="2. 食用方法"></a>2. 食用方法</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>下载地址：<a href="http://ftp.midnight-commander.org/mc-4.8.19.tar.xz">http://ftp.midnight-commander.org/mc-4.8.19.tar.xz</a> </li>
<li>解压后运行：$ ./configure </li>
<li>运行：$ make </li>
<li>运行：$ make install</li>
</ol>
<span id="more"></span>

<h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><ol>
<li>其他安装方法请自行 bing/Google 搜索。相信稍微有点 Linux 基础的同学安装不会有任何问题的。</li>
<li>其他版本地址：<a href="http://ftp.midnight-commander.org/">http://ftp.midnight-commander.org</a></li>
</ol>
<h1 id="3-使用教程"><a href="#3-使用教程" class="headerlink" title="3. 使用教程"></a>3. 使用教程</h1><ol>
<li>使用命令提示符启动 Midnight Commander：$ mc</li>
<li>默认情况下，Midnight Commander 使用蓝色背景颜色并高亮重要的菜单项。可以使用以下指令关闭颜色：$ mc –nocolor</li>
<li>保存常用地址：呼出添加常用地址列表页面，在任意目录列表中，按 *<em>Ctrl+\*</em> 快捷键,就可以呼出常用文件夹地址列表，在界面中可以按 <strong>Tab</strong> 键定位到下面的操作按钮上。选择目录就可以直接定位到收藏的目录中。</li>
<li>在 mc 界面中，可以使用 <strong>Tab</strong> 切换到左右两边。</li>
<li><strong>Ctrl+o</strong> 切换终端和mc的界面。</li>
<li><strong>Ctrl+u</strong> 切换左右文件列表。</li>
<li><strong>Alt+i</strong> 切换对面的文件列表和光标所在列表一致。</li>
<li><strong>Ctrl+s</strong> 当前界面搜索文件名，默认从文件名开始匹配。</li>
<li><strong>Alt+c</strong> 快速跳转指定目录。</li>
<li>一个使用的小细节：mc 界面中弹出小窗口联系按两下 <strong>Esc</strong> 键可关闭小窗口。</li>
</ol>
<h1 id="4-参考链接"><a href="#4-参考链接" class="headerlink" title="4. 参考链接"></a>4. 参考链接</h1><p>本文摘自 **<a href="www.linuxidc.com">Linux公社</a>**，相关连接地址：<a href="https://www.linuxidc.com/Linux/2019-02/156828.htm">Ubuntu 18.04下可视文件管理器Midnight Commander的安装使用</a>。</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令及脚本</title>
    <url>/2019/03/20/Linux-%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>本篇文章记录 Linux 相关的命令及脚本，以便查看备份。</p>
<h1 id="1-修改硬盘名称"><a href="#1-修改硬盘名称" class="headerlink" title="1. 修改硬盘名称"></a>1. 修改硬盘名称</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ e2label /dev/sda2 <span class="string">&quot;name&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="2-Linux-一键安装-SSR"><a href="#2-Linux-一键安装-SSR" class="headerlink" title="2. Linux 一键安装 SSR"></a>2. Linux 一键安装 SSR</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -q -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/SSR-Bash-Python/master/install.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>
<p>脚本是开源的，开源地址：<a href="https://github.com/FunctionClub/SSR-Bash-Python">https://github.com/FunctionClub/SSR-Bash-Python</a></p>
<h1 id="3-Linux-一键安装-v2ray"><a href="#3-Linux-一键安装-v2ray" class="headerlink" title="3. Linux 一键安装 v2ray"></a>3. Linux 一键安装 v2ray</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash &lt;(curl -s -L https://233blog.com/v2ray.sh)</span><br></pre></td></tr></table></figure>
<p>脚本是开源的，开源地址：<a href="https://github.com/233boy/v2ray">https://github.com/233boy/v2ray</a></p>
<h1 id="4-查看-Linux-版本内核信息等"><a href="#4-查看-Linux-版本内核信息等" class="headerlink" title="4. 查看 Linux 版本内核信息等"></a>4. 查看 Linux 版本内核信息等</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ uname -a</span><br></pre></td></tr></table></figure>

<span id="more"></span>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MCU 功能严重异常原因分析</title>
    <url>/2019/03/29/MCU-%E5%8A%9F%E8%83%BD%E4%B8%A5%E9%87%8D%E5%BC%82%E5%B8%B8%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<ul>
<li><p><strong>电源问题</strong><br>比方电源质量差，纹波过大，尤其开关电源供电时；或者供电芯片质量差，输出不稳定；或者系统供电能力不足而引起电源波动等。</p>
</li>
<li><p><strong>时钟问题</strong><br>一般表现在时钟配置错误或者时钟工作不稳定，比方配置超出芯片主频工作范围，外部时钟脆弱不堪等。</p>
</li>
<li><p><strong>Boot 配置脚问题</strong><br>经常遇到有人因为 Boot 脚的焊接或接触不良导致各类奇怪问题。这种情况多表现在芯片功能时好时坏，工作不稳定。所谓“坏”的时候就是芯片表现得类似死机一般。</p>
</li>
<li><p><strong>启动文件问题</strong><br>经常因为选错了启动文件，导致程序无法正常运行，或者说调试时好好的，脱机运行就出鬼。这点在做不同系列芯片间移植时最容易碰到。</p>
</li>
<li><p><strong>中断请求位清楚问题</strong><br>由于中断请求位没有及时清除导致中断没完没了的重复进入中断，感觉系统死机一般。</p>
</li>
<li><p><strong>堆或栈的越界溢出</strong><br>这个也会导致芯片无法正常工作。</p>
</li>
<li><p><strong>VCAP 脚问题</strong><br>有些 MCU 芯片有 VCAP 脚，这类脚往往需要接上适当的电容，如果无视了它的话，也可能导致整个芯片的功能异常。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>RAM ROM Flash UFS 区别</title>
    <url>/2021/04/04/RAM-ROM-Flash-%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h1 id="1-RAM分类"><a href="#1-RAM分类" class="headerlink" title="1.RAM分类"></a>1.RAM分类</h1><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>RAM</td>
<td>DRAM</td>
<td>SDRAM</td>
<td>同步动态随机存取存储器，需要刷新，速度快，容量大</td>
</tr>
<tr>
<td>掉电丢失数据</td>
<td>动态随机存取存储器</td>
<td>DDR SDRAM</td>
<td>双倍速率SDRAM（内存条），工作电压2.5V/2.6V</td>
</tr>
<tr>
<td></td>
<td></td>
<td>DDR2 SDRAM</td>
<td>内存时钟 200~533MHz，工作电压1.8V</td>
</tr>
<tr>
<td></td>
<td></td>
<td>DDR3 SDRAM</td>
<td>内存时钟 400~1066MHz，工作电压1.5V/1.35</td>
</tr>
<tr>
<td></td>
<td></td>
<td>DDR4 SDRAM</td>
<td>16bit预取机制（DDR3为8bit），工作电压1.2V</td>
</tr>
<tr>
<td></td>
<td></td>
<td>DDR5 SDRAM</td>
<td>工作电压1.1V</td>
</tr>
<tr>
<td></td>
<td></td>
<td>GDDR SDRA</td>
<td>图形DDR，目前有GDDR2~6</td>
</tr>
<tr>
<td></td>
<td></td>
<td>LPDDR SDRAM</td>
<td>低功率DDR,时钟166MHz，LPDDR2其工作电压1.2V，时钟100~533MHz</td>
</tr>
<tr>
<td></td>
<td></td>
<td>RDRAM</td>
<td></td>
</tr>
<tr>
<td></td>
<td>SRAM</td>
<td></td>
<td>静态随机存取存储器，不用刷新，速度可以非常快，价格高，容量小，一种置于CPU的高速缓存（Cache)</td>
</tr>
<tr>
<td></td>
<td>DARAM</td>
<td></td>
<td>双口RAM，一个时钟周期可访问两次</td>
</tr>
<tr>
<td></td>
<td>SARAM</td>
<td></td>
<td>单口RAM，一个时钟周期访问一次</td>
</tr>
<tr>
<td></td>
<td>PSRAM</td>
<td></td>
<td>伪静态存储器，内部自带刷新机制</td>
</tr>
</tbody></table>
<h1 id="2-ROM分类"><a href="#2-ROM分类" class="headerlink" title="2.ROM分类"></a>2.ROM分类</h1><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>ROM</td>
<td>ROM</td>
<td>只能写入一次，如CD-ROM、DVD-ROM</td>
</tr>
<tr>
<td></td>
<td>PROM</td>
<td>可编程ROM，内部是行列式熔断丝</td>
</tr>
<tr>
<td></td>
<td>EPROM</td>
<td>紫外线可擦除，写入时需要用编程器产生高压脉冲信号</td>
</tr>
<tr>
<td></td>
<td>OTP-ROM</td>
<td>一次可编程ROM，写入原理与EPROM相同</td>
</tr>
<tr>
<td></td>
<td>EEPROM</td>
<td>电可擦除</td>
</tr>
</tbody></table>
<h1 id="3-Flash分类"><a href="#3-Flash分类" class="headerlink" title="3.Flash分类"></a>3.Flash分类</h1><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Flash</td>
<td>NOR Flash</td>
<td>以扇区为单位写，可随机读取，程序可直接运行，容量小</td>
<td>Parallel NOR Flash</td>
</tr>
<tr>
<td>闪存</td>
<td></td>
<td></td>
<td>Serial NOR Flash</td>
</tr>
<tr>
<td></td>
<td>Nand Flash</td>
<td>以块为单位读写，不能直接运行程序，容量大</td>
<td>SLC、MLC、TLC、QLC</td>
</tr>
<tr>
<td></td>
<td>MMC</td>
<td>MMC接口、NAND Flash、主控制器</td>
<td></td>
</tr>
<tr>
<td></td>
<td>eMMC Flash</td>
<td>嵌入式存储解决方案，带有MMC接口（并行数据总线）、NAND Flash、主控制器</td>
<td></td>
</tr>
<tr>
<td></td>
<td>UFS</td>
<td>串行数据总线、Nand Flash、主控制器</td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>eMMC的最新 5.1标准理论最高值最高可以达到400MB/s，UFS的最大优势就是双通道双向读写，UFS3.0接口带宽最高23.2Gbps，也就是2.9GB/s。</p>
</blockquote>
<blockquote>
<p>eMMC的电路接口与SD卡是一样的，SD卡只是焊接在PCB上，然后做上金手指和外壳。eMMC支持8位和4位数据总线，SD卡标准是4位数据总线。</p>
</blockquote>
<blockquote>
<p>eMMC有两条总线，分别传输指令数据输入和输出，而且因为是并行总线还要有额外的data strobe。而UFS则是有两条差分的数据lane，指令和数据都是以packet的形式发送的。</p>
</blockquote>
<blockquote>
<p>SSD = 主控 + DRAM缓存 + Nand Flash</p>
</blockquote>
<blockquote>
<p>eMMC = 主控 + Nand Flash + 标准封装接口</p>
</blockquote>
]]></content>
      <tags>
        <tag>RAM</tag>
        <tag>ROM</tag>
        <tag>Flash</tag>
        <tag>eMMC</tag>
        <tag>UFS</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32 IO 口电气特性</title>
    <url>/2019/03/29/STM32-IO-%E5%8F%A3%E7%94%B5%E6%B0%94%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[<h1 id="1-规格书中内容"><a href="#1-规格书中内容" class="headerlink" title="1. 规格书中内容"></a>1. 规格书中内容</h1><p><strong>从 STM32F103C8T6 规格书上整理如下表</strong><br>在 Excel 里面重新整理了格式，显示图片较小可以放大观看<br><img src="https://file.infonet.io/blog-files/STM32/IO-static-characteristics.png" alt="IO-static-characteristics"></p>
<h1 id="2-一般计算值"><a href="#2-一般计算值" class="headerlink" title="2. 一般计算值"></a>2. 一般计算值</h1><p><strong>当 VDD = 3.3V, VSS = 0V 时，各个参数值如下表</strong><br>一般按照 VIL Max = 1.1V, VIH Min = 2.2V 计算就不会有错，准确点的请看下表<br><img src="https://file.infonet.io/blog-files/STM32/IO-static-characteristics-value.png" alt="IO-static-characteristics-value"></p>
<h1 id="3-整理的-Excel-文件"><a href="#3-整理的-Excel-文件" class="headerlink" title="3. 整理的 Excel 文件"></a>3. 整理的 Excel 文件</h1><ul>
<li><a href="https://file.infonet.io/blog-files/STM32/IO-static-characteristics.xlsx">IO-static-characteristics.xlsx</a></li>
</ul>
]]></content>
      <tags>
        <tag>STM32</tag>
      </tags>
  </entry>
  <entry>
    <title>SublimeText使用教程</title>
    <url>/2020/03/21/SublimeText%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://www.sublimetext.com/">Sublime Text</a> (3.2.2 版本)</p>
</blockquote>
<h1 id="1-汉化"><a href="#1-汉化" class="headerlink" title="1. 汉化"></a>1. 汉化</h1><ol>
<li>安装 Package Control.</li>
</ol>
<ul>
<li>方法一：<ol>
<li>打开命令面板: Win/Linux: Ctrl+Shift+P, Mac: Cmd+Shift+P.</li>
<li>输入 Install Package Control, 然后按 Enter.</li>
</ol>
</li>
<li>方法二：（来源：<a href="https://packagecontrol.io/installation%EF%BC%89">https://packagecontrol.io/installation）</a><ol>
<li>点击 Preferences -&gt; Browse Packages. （会自动打开软件用户目录。）</li>
<li>Win: 文件件返回上一页 -&gt; 进入 Installed Packages 文件夹。</li>
<li>下载 Package Control 安装包：<br><a href="https://packagecontrol.io/Package%20Control.sublime-package">https://packagecontrol.io/Package%20Control.sublime-package</a></li>
<li>将下载的安装包复制到 Installed Packages 文件夹中。</li>
</ol>
</li>
</ul>
<ol start="2">
<li>在 Preferences 下就会出现 Package Control.</li>
<li>使用快捷键 Ctrl+Shift+P, 输入 Chinese Localization, 出来后点击安装。</li>
</ol>
<h1 id="2-Package-Control-的常用命令"><a href="#2-Package-Control-的常用命令" class="headerlink" title="2. Package Control 的常用命令"></a>2. Package Control 的常用命令</h1><ol>
<li>Discover Package： 查询插件。（会跳转到Package Control 的官网中。）</li>
<li>Install Package ： 安装某个插件。</li>
<li>Remove Package： 移除某个已安装的插件。</li>
<li>Disable Package ：禁用某个已安装插件。</li>
<li>Enable Package ： 启用某个被禁用的插件。</li>
<li>List Package ： 列出所有已安装插件。</li>
</ol>
<h1 id="3-预览-Markdown"><a href="#3-预览-Markdown" class="headerlink" title="3. 预览 Markdown"></a>3. 预览 <a href="https://www.markdownguide.org/">Markdown</a></h1><ol>
<li>打开 Sublime Text -&gt; Preferences(快捷键：Ctrl+Shift+P) -&gt; Install Package</li>
<li>输入 MarkdownLivePreview, 然后按 Enter 安装。</li>
<li>输入 LiveReload, 然后按 Enter 安装。</li>
<li>Ctrl+Shift+P, 然后输入 mdp 找到 MarkdownLivePreview: Open Preview 回车就可以打开实时预览。<br>（传统的本地打开，不支持在线资源的预览）</li>
</ol>
<blockquote>
<p>借此分享一个好用的 Markdown 文本编辑器，免费而且还跨平台：<a href="https://typora.io/">Typora</a><br>有一定的小缺点就是有多的空行。</p>
</blockquote>
]]></content>
      <tags>
        <tag>SublimeText</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10 + office 激活工具下载</title>
    <url>/2019/03/11/Windows-and-office-kms/</url>
    <content><![CDATA[<h1 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h1><ul>
<li>解压后管理员运行 <strong>KMSELDI.exe</strong></li>
<li><a href="https://file.infonet.io/blog-files/Win10/KMSpico-Portable.7z">KMSpico-Portable.7z</a></li>
</ul>
]]></content>
      <tags>
        <tag>KMS</tag>
      </tags>
  </entry>
  <entry>
    <title>USB相关介绍</title>
    <url>/2020/03/21/USB%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<blockquote>
<p> 以下摘自：<a href="https://zh.wikipedia.org/wiki/USB">https://zh.wikipedia.org/wiki/USB</a></p>
</blockquote>
<h2 id="1-USB-版本"><a href="#1-USB-版本" class="headerlink" title="1. USB 版本"></a>1. USB 版本</h2><p><img src="https://file.infonet.io/blog-files/USB/USB%E7%89%88%E6%9C%AC.png" alt="USB版本"></p>
<p><em>注意：USB-IF 当前正式的主版本号只有 USB 2.0 和 USB 3.2 两个。</em></p>
<!---more--->

<h2 id="2-USB-标准"><a href="#2-USB-标准" class="headerlink" title="2. USB 标准"></a>2. USB 标准</h2><p><img src="https://file.infonet.io/blog-files/USB/USB%E6%A0%87%E5%87%86.png" alt="USB标准"></p>
<h2 id="3-USB-数据包格式"><a href="#3-USB-数据包格式" class="headerlink" title="3. USB 数据包格式"></a>3. USB 数据包格式</h2><p><img src="https://file.infonet.io/blog-files/USB/USB%E6%95%B0%E6%8D%AE%E5%8C%85%E6%A0%BC%E5%BC%8F.png" alt="USB数据包格式"></p>
<h2 id="4-USB-设备分类"><a href="#4-USB-设备分类" class="headerlink" title="4. USB 设备分类"></a>4. USB 设备分类</h2><table>
<thead>
<tr>
<th>ID</th>
<th>设备</th>
<th>例子</th>
</tr>
</thead>
<tbody><tr>
<td>0x00</td>
<td>保留值</td>
<td>无</td>
</tr>
<tr>
<td>0x01</td>
<td>音效设备</td>
<td>声卡</td>
</tr>
<tr>
<td>0x02</td>
<td>USB 通信控制设备</td>
<td>网卡、调制解调器、串列端口</td>
</tr>
<tr>
<td>0x03</td>
<td><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E6%A9%9F%E4%BB%8B%E9%9D%A2%E8%A3%9D%E7%BD%AE">人机界面设备</a>（HID）</td>
<td><a href="https://zh.wikipedia.org/wiki/%E9%8D%B5%E7%9B%A4">键盘</a>、<a href="https://zh.wikipedia.org/wiki/%E6%BB%91%E9%BC%A0">鼠标</a></td>
</tr>
<tr>
<td>0x05</td>
<td>物理接口设备</td>
<td><a href="https://zh.wikipedia.org/wiki/%E6%8E%A7%E5%88%B6%E6%9D%86">控制杆</a></td>
</tr>
<tr>
<td>0x06</td>
<td>静止图像捕捉设备</td>
<td><a href="https://zh.wikipedia.org/wiki/%E5%BD%B1%E5%83%8F%E6%8E%83%E6%8F%8F%E5%99%A8">影像扫描仪</a>、<a href="https://zh.wikipedia.org/wiki/PictBridge">Picture Transfer Protocol</a></td>
</tr>
<tr>
<td>0x07</td>
<td>打印设备</td>
<td><a href="https://zh.wikipedia.org/wiki/%E6%89%93%E5%8D%B0%E6%A9%9F">打印机</a></td>
</tr>
<tr>
<td>0x08</td>
<td>大容量访问设备</td>
<td><a href="https://zh.wikipedia.org/wiki/U%E7%9B%98">U 盘</a>、移动<a href="https://zh.wikipedia.org/wiki/%E7%A1%AC%E7%A2%9F">硬盘</a>、<a href="https://zh.wikipedia.org/wiki/%E8%A8%98%E6%86%B6%E5%8D%A1">存储卡</a>读卡器、数字相机</td>
</tr>
<tr>
<td>0x09</td>
<td><a href="https://zh.wikipedia.org/wiki/%E9%9B%86%E7%B7%9A%E5%99%A8">集线器</a></td>
<td>集线器</td>
</tr>
<tr>
<td>0x0A</td>
<td><a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1">通信</a>设备</td>
<td><a href="https://zh.wikipedia.org/wiki/%E6%95%B8%E6%93%9A%E6%A9%9F"> 调制解调器</a>、<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E5%8D%A1">网络卡、</a><a href="https://zh.wikipedia.org/wiki/ISDN">ISDN</a>、<a href="https://zh.wikipedia.org/wiki/%E5%82%B3%E7%9C%9F">传真</a></td>
</tr>
<tr>
<td>0x0B</td>
<td>智能卡设备</td>
<td>读卡器</td>
</tr>
<tr>
<td>0x0E</td>
<td>影像设备</td>
<td><a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E6%94%9D%E5%BD%B1%E6%A9%9F">摄像头</a></td>
</tr>
<tr>
<td>0xE0</td>
<td>无线传输设备</td>
<td><a href="https://zh.wikipedia.org/wiki/%E8%97%8D%E7%89%99">蓝牙</a></td>
</tr>
<tr>
<td>0xFE</td>
<td>特殊的应用</td>
<td>红外线数据桥接器</td>
</tr>
<tr>
<td>0xFF</td>
<td>定制设备</td>
<td></td>
</tr>
</tbody></table>
<h2 id="5-USB-接头"><a href="#5-USB-接头" class="headerlink" title="5. USB 接头"></a>5. USB 接头</h2><p><img src="https://file.infonet.io/blog-files/USB/USB%E6%8E%A5%E5%A4%B4.png" alt="USB接口"></p>
<h2 id="6-USB-线"><a href="#6-USB-线" class="headerlink" title="6. USB 线"></a>6. USB 线</h2><p><img src="https://file.infonet.io/blog-files/USB/USB%E7%BA%BF.png" alt="USB线"></p>
<h2 id="7-USB-插头版本"><a href="#7-USB-插头版本" class="headerlink" title="7. USB 插头版本"></a>7. USB 插头版本</h2><p><img src="https://file.infonet.io/blog-files/USB/USB%E6%8F%92%E5%A4%B4%E7%89%88%E6%9C%AC.png" alt="USB插头版本"></p>
<blockquote>
<p>参考文档：<a href="https://www.usb.org/sites/default/files/usb-if_logo_usage_guidelines_final_103019.pdf">https://www.usb.org/sites/default/files/usb-if_logo_usage_guidelines_final_103019.pdf</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>USB</tag>
      </tags>
  </entry>
  <entry>
    <title>RS485简介</title>
    <url>/2019/11/13/RS485%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="1、特性"><a href="#1、特性" class="headerlink" title="1、特性"></a>1、特性</h1><ul>
<li>1、RS-485的电气特性：逻辑“1”以两线间的电压差为 +(2-6)V 表示；逻辑“0”以两线间的电压差为 -(2-6)V 表示。</li>
<li>2、RS-485的数据最高传输速率为10Mbps。</li>
<li>3、RS-485接口是采用平衡驱动器和差分接收器的组合，抗共模干能力增强，即抗噪声干扰性好。</li>
<li>4、“使能”端是用于控制发送驱动器与传输线的切断与连接。当“使能”端起作用时，发送驱动器处于高阻状态，称作“第三态”，即它是有别于逻辑“1”与“0”的第三态。</li>
<li>5、接收器也作与发送端相对的规定，收、发端通过平衡双绞线将AA与BB对应相连，当在收端AB之间有大于+200mV的电平时，输出正逻辑电平，小于-200mV时，输出负逻辑电平。接收器接收平衡线上的电平范围通常在200mV至6V之间。</li>
</ul>
<span id="more"></span>

<h1 id="2、电路图与波形"><a href="#2、电路图与波形" class="headerlink" title="2、电路图与波形"></a>2、电路图与波形</h1><ul>
<li><p>IC 外围电路：</p>
<p><img src="https://file.infonet.io/blog-files/RS485/MAX485E-CIR.png" alt="MAX485E-CIR"></p>
</li>
<li><p>IC 向 RS485 总线发送数据：</p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">EN</td>
<td align="center">TX(DI)</td>
<td align="center">A</td>
<td align="center">B</td>
<td align="center">RX</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">DATA</td>
<td align="center">TX</td>
<td align="center">与A相反</td>
<td align="center">1</td>
</tr>
</tbody></table>
<p><img src="https://file.infonet.io/blog-files/RS485/MAX485-DI%28TXD%29.png" alt="MAX485E-DI(TXD)"></p>
<ul>
<li>IC 接收 RS485 总线数据：</li>
</ul>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">EN</td>
<td align="center">RX(RO)</td>
<td align="center">A</td>
<td align="center">B</td>
<td align="center">TX</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">DATA</td>
<td align="center">RX</td>
<td align="center">与A相反</td>
<td align="center">1</td>
</tr>
</tbody></table>
<p><img src="https://file.infonet.io/blog-files/RS485/MAX485E-RO%28RXD%29.png" alt="MAX485E-RO(RXD)"></p>
<h1 id="3、推荐连接："><a href="#3、推荐连接：" class="headerlink" title="3、推荐连接："></a>3、推荐连接：</h1><p>1、<a href="http://www.ti.com.cn/general/cn/docs/gencontent.tsp?contentId=136156">http://www.ti.com.cn/general/cn/docs/gencontent.tsp?contentId=136156</a><br>2、<a href="https://zhuanlan.zhihu.com/p/32955105">https://zhuanlan.zhihu.com/p/32955105</a><br>3、<a href="http://murata.eetrend.com/article/2018-08/1001944.html">http://murata.eetrend.com/article/2018-08/1001944.html</a><br>4、<a href="https://www.analog.com/media/cn/technical-documentation/application-notes/AN-960_cn.pdf">https://www.analog.com/media/cn/technical-documentation/application-notes/AN-960_cn.pdf</a></p>
]]></content>
      <tags>
        <tag>RS485</tag>
      </tags>
  </entry>
  <entry>
    <title>Typecho 博客搭建成功后写的第一篇文章</title>
    <url>/2019/02/20/Typecho-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E5%90%8E%E5%86%99%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<ul>
<li>这个是把博客搭建成功后写的第一篇文章，相关的玩法目前还在研究中。</li>
<li>博客系统 VPS + <a href="bt.cn">BT</a> + <a href="http://typecho.org/">Typecho</a> 一键搭建的，能力有限，先搭建起来再说，后续再慢慢学习更多的知识。</li>
<li>搭建网站的目的是记录一些东西，自己记忆力不好写下来免得忘记了，同时也方便查找和分享。</li>
</ul>
]]></content>
      <tags>
        <tag>Typecho</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows shell babun</title>
    <url>/2019/09/22/Windows-shell/</url>
    <content><![CDATA[<h1 id="Babun-a-windows-shell-you-will-love"><a href="#Babun-a-windows-shell-you-will-love" class="headerlink" title="Babun - a windows shell you will love!"></a><a href="https://babun.github.io/">Babun - a windows shell you will love!</a></h1><h2 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h2><p>中文显示将变成英文</p>
<ol>
<li><p>打开 ~/.babunrc 文件</p>
</li>
<li><p>在文件最后增加一行命令：</p>
</li>
</ol>
  <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>重启 babun</li>
</ol>
]]></content>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>USB-Type-C详细介绍</title>
    <url>/2020/06/13/USB-Type-C%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="1-USB-Type-C接口包括"><a href="#1-USB-Type-C接口包括" class="headerlink" title="1. USB-Type-C接口包括"></a>1. USB-Type-C接口包括</h1><ul>
<li>支持DisplayPort, PCIe等alternate mode的两组Superspeed USB线路(RX1/TX1和RX2/TX2)</li>
<li>用于Alternate Mode的两条Sideband Use(SBU)线路</li>
<li>用于Hi-Speed USB 2.0的Dp和Dn线路</li>
<li>用于总线供电的VBUS线路</li>
<li>用于为线缆控制器供电的VCONN 线路(只位于Type-C插头接口上)</li>
<li>用于PD通信的配置信道(CC)。</li>
</ul>
<h1 id="2-插头反转"><a href="#2-插头反转" class="headerlink" title="2. 插头反转"></a>2. 插头反转</h1><p>Type-C插座可处理线缆插头的任意方向。USB-Type-C插座完全对称。所有的供电、接地和信号引脚两边对称，从而让USB-Type-C插头能够在Type-C接口中任意翻转。</p>
<ul>
<li>GND、USB 2.0和VBUS 信号保持连接。USB 2.0信号被复制到Type-C插座的上下两层，以保持任意方向的连接。</li>
<li>插头上的VCONN 或CC引脚可以连接插座中的任意一个配置信道引脚-CC1或CC2 (取决于插入方向)。</li>
<li>两条Superspeed线路的其中一条保持正确连接，USB-Type-C 插座必须使用SuperSpeed mux合理地进行连接</li>
</ul>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%AD%A3%E5%8F%8D%E6%8F%92.png" alt="USB-Type-C正反插"></p>
<!---more--->

<h1 id="3-USB-Type-C设备基本概念"><a href="#3-USB-Type-C设备基本概念" class="headerlink" title="3. USB-Type-C设备基本概念"></a>3. USB-Type-C设备基本概念</h1><ol>
<li><p>DFP(Downstream Facing Port)</p>
<p>下行端口，可以理解为Host，DFP提供VBUS，也可以提供数据。典型的DFP设备是电源适配器，因为它永远都只是提供电源。</p>
</li>
<li><p>UFP(Upstream Facing Port)</p>
<p>上行端口，可以理解为Device，UFP从VBUS中取电，并可提供数据。典型设备是U盘，移动硬盘，因为它们永远都是被读取数据和从VBUS取电，当然不排除未来可能出现可以作为主机的U盘。</p>
</li>
<li><p>DRP(Dual Role Port)</p>
<p>双角色端口，DRP既可以做DFP(Host)，也可以做UFP(Device)，也可以在DFP与UFP间动态切换。典型的DRP设备是电脑(电脑可以作为USB的主机，也可以作为被充电的设备（苹果新推出的MAC Book Air）)，具OTG功能的手机(手机可以作为被充电和被读数据的设备，也可以作为主机为其他设备提供电源或者读取U盘数据)，移动电源(放电和充电可通过一个USB-Type-C，即此口可以放电也可以充电)。</p>
</li>
<li><p>CC（Configuration Channel）</p>
<p>配置通道，这是USB-Type-C里新增的关键通道，它的作用有检测USB连接，检测正反插，USB设备间数据与VBUS的连接建立与管理等。</p>
</li>
<li><p>USB PD(USB Power Delivery)</p>
<p>PD是一种通信协议，它是一种新的电源和通讯连接方式，它允许USB设备间传输最高至100W（20V/5A）的功率，同时它可以改变端口的属性，也可以使端口在DFP与UFP之间切换，它还可以与电缆通信，获取电缆的属性。</p>
</li>
<li><p>Electronically Marked Cable</p>
<p>封装有E-Marker芯片的USB-Type-C有源电缆，DFP和UFP利用PD协议可以读取该电缆的属性：电源传输能力，数据传输能力，ID等信息。所有全功能的Type-C电缆都应该封装有E-Marker，但USB2.0 Type-C电缆可以不封装E-Marker。</p>
</li>
</ol>
<h1 id="4-USB-Type-C设备是否需要CC逻辑芯片"><a href="#4-USB-Type-C设备是否需要CC逻辑芯片" class="headerlink" title="4. USB-Type-C设备是否需要CC逻辑芯片"></a>4. USB-Type-C设备是否需要CC逻辑芯片</h1><h2 id="1-USB-Type-C设备DFP-to-UFP配置流程与VBUS管理有如下主要流程："><a href="#1-USB-Type-C设备DFP-to-UFP配置流程与VBUS管理有如下主要流程：" class="headerlink" title="1. USB-Type-C设备DFP-to-UFP配置流程与VBUS管理有如下主要流程："></a>1. USB-Type-C设备DFP-to-UFP配置流程与VBUS管理有如下主要流程：</h2><h3 id="1-设备连接与分开检测"><a href="#1-设备连接与分开检测" class="headerlink" title="1. 设备连接与分开检测"></a>1. 设备连接与分开检测</h3><p>DFP需要检测到CC管脚上有某个电压时，判断UFP设备已插入或拔出，来提供和管理VBUS。当没有UFP设备插入时，必须关闭VBUS。因此所有的DFP设备需要CC逻辑检测与控制芯片。</p>
<h3 id="2-插入方向检测"><a href="#2-插入方向检测" class="headerlink" title="2. 插入方向检测"></a>2. 插入方向检测</h3><h4 id="1-解释1"><a href="#1-解释1" class="headerlink" title="1. 解释1"></a>1. 解释1</h4><p>   如图下图，虽然USB-Type-C插座和插头的两排管脚上下对称，USB数据信号都有两组重复的通道，但主控芯片通常只有一组TX/RX和D+/-通道。由于USB2.0的数据率最高只有480Mbps, 可以不考虑信号走线的阻抗连续性而得到较好地数据传输质量，因此USB2.0的D+/-信号可以不被MUX控制而直接从主控芯片一分二连接至USB-Type-C插座的两组D+/-管脚上。但USB3.0或者USB3.1的数据率高达5Gbps或者10Gbps，如果信号线还是被简单地一分二的话，不连续的信号线阻抗将严重破坏数据传输质量，因此必须由MUX切换来保证信号路径阻抗的一致性，以确保信号传输质量。下图中右侧所示的MUX从TX1/RX1和TX2/RX2中选择一路连接至主控芯片，而这个MUX就必须被CC Logic控制。</p>
<p>   <img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%95%B0%E6%8D%AE%E8%B5%B0%E7%BA%BF%E9%80%BB%E8%BE%91%E6%A8%A1%E5%9E%8B.jpg" alt="USB-Type-C数据走线逻辑模型"></p>
<p>   但必须注意的是在USB3.0/USB3.1的应用中，有一种情况也可以不需要MUX，即不需要方向检测，如下图所示，不管是正插还是反插，左侧主机都可以根据CC管脚上的状态来切换MUX来连通USB3.0/USB3.1信号。此场景发生在右侧设备永远是UFP的情况下，比如U盘，移动硬盘等。</p>
<p>   因此，在USB2.0应用中，无需考虑方向检测问题，但USB3.0或者USB3.1应用中，必须考虑方向检测问题。USB3.0/USB3.1应用中，除UFP设备以外的所有设备都需要CC逻辑检测与控制芯片。</p>
<p>   <img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E7%9B%B4%E6%8E%A5%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E8%B5%B0%E7%BA%BF%E9%80%BB%E8%BE%91%E6%A8%A1%E5%9E%8B.jpg" alt="USB-Type-C直接连接数据走线逻辑模型"></p>
<h4 id="2-解释2"><a href="#2-解释2" class="headerlink" title="2. 解释2"></a>2. 解释2</h4><p>   USB-Type-C规范解释了上行面端口(UFP)如何利用CC引脚CC1和CC2上的下拉电阻(Rd)申报成为一个外设。下行面端口(DFP)需要在CC1和CC2上配备上拉电阻(Rp)。所构成的电阻分压器用于确定Type-C外设是连接还是分离状态;以及Type-C插头的方向，因为线缆中只连接了一个CC引脚 (如下图所示)。</p>
<p>   DFP，尤其扮演USB 数据主机的DFP，通常是指PC等主机上的端口或者设备连接的集线器上的下行端口。在其初始状态，DFP为VBUS 和VCONN供电。UFP是指设备上的端口或者连接DFP的集线器上的上行端口。</p>
<p>   Type-C电子标记线缆组件(EMCA)需要使用VCONN 向线缆内部的标记电子元件供电。这些EMCA在Type-C 插头的VCONN 引脚上配有Ra终结电阻器。没有电子标记的Type-C线缆不含电子元件，因此不需要VCONN 供电。这些非EMCA线缆 中的 VCONN 引脚没有固定在Type-C插头。</p>
<p>   <img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%90%91%E6%A3%80%E6%B5%8B.png" alt="USB-Type-C连接方向检测"></p>
<p>   Type-C插座CC引脚上的Rp和Rd终结电阻器能够检测连接事件，并识别插座中Type-C插头的方向。DFP和UFP监测Type-C插座中两个CC引脚的电压相对于无端接电压的电压变化，以此监测连接事件。UFP还监测VBUS，是检测DFP连接的另一个指标。DFP和UFP都能从各自连接端识别Type-C插头方向，这是因为线缆中只连接了一个CC引脚。确定连接和方向后，如果检测到一个Ra终结电阻器，DFP将把另一个CC引脚更改为VCONN，以便向USB-Type-C EMCA插头中的电子元件供电。</p>
<h3 id="3-建立DFP-to-UFP和VBUS管理与检测"><a href="#3-建立DFP-to-UFP和VBUS管理与检测" class="headerlink" title="3. 建立DFP-to-UFP和VBUS管理与检测"></a>3. 建立DFP-to-UFP和VBUS管理与检测</h3><p>   DRP在待机模式下每50ms在DFP和UFP间切换一次。当切换至DFP时，CC管脚上必须有一个上拉至VBUS的电阻Rp或者输出一个电流源，当切换至UFP时，CC管脚上必须有一个下拉至GND的电阻Rd。此切换动作必须由CC Logic芯片来完成。当DFP检测到UFP插入之后才可以输出VBUS，当UFP拔出以后必须关闭VBUS。此动作必须由CC Logic芯片来完成。</p>
<p>   电阻和充电电流Rp和Rd具体值，如下表（以上拉电压5V为例）</p>
<table>
<thead>
<tr>
<th align="center">DFP Rp</th>
<th align="center">UFP Rd</th>
<th align="center">CC Voltage</th>
<th align="center">VBUS Current Limit</th>
</tr>
</thead>
<tbody><tr>
<td align="center">56K</td>
<td align="center">5.1K</td>
<td align="center">0.42V</td>
<td align="center">Default USB Current</td>
</tr>
<tr>
<td align="center">22K</td>
<td align="center">5.1K</td>
<td align="center">0.94V</td>
<td align="center">1.5A@5V</td>
</tr>
<tr>
<td align="center">10K</td>
<td align="center">5.1K</td>
<td align="center">1.67V</td>
<td align="center">3.0A@5V</td>
</tr>
</tbody></table>
<h3 id="4-USB-Type-C-VBUS电流检测与使用"><a href="#4-USB-Type-C-VBUS电流检测与使用" class="headerlink" title="4. USB-Type-C VBUS电流检测与使用"></a>4. USB-Type-C VBUS电流检测与使用</h3><p>   USB-Type-C中新增了电流检测与使用功能，新增三种电流模式：默认的USB电源模式(500mA/900mA)，1.5A，3.0A。三种电流模式由CC管脚来传输和检测，对于需要广播电流输出能力的DFP而言，需要通过不同值的CC上拉电阻Rp来实现；对于UFP而言，需要检测CC管脚上的电压值来获取对方DFP的电流输出能力。</p>
<h3 id="5-USB-PD通信"><a href="#5-USB-PD通信" class="headerlink" title="5. USB PD通信"></a>5. USB PD通信</h3><p>   USB PD看似只是电源传输与管理的协议，实际上它可改变端口角色，可与有源电缆通讯，允许DFP成为受电设备等诸多高级功能，因此支持PD的设备必须采用CC Logic芯片。</p>
<h3 id="6-发现与配置扩展其他外设-Audio，Debug"><a href="#6-发现与配置扩展其他外设-Audio，Debug" class="headerlink" title="6. 发现与配置扩展其他外设(Audio，Debug)"></a>6. 发现与配置扩展其他外设(Audio，Debug)</h3><p>   USB-Type-C支持语音附件以及Debug模式，USB-Type-C接口的耳机如果只作为UFP且因为其功耗较小而无需检测DFP的供电能力时，无需CC Logic芯片。</p>
<h2 id="2-小结"><a href="#2-小结" class="headerlink" title="2. 小结"></a>2. 小结</h2><p>   综上，所有的DFP(如电源适配器)，所有的DRP(如电脑，手机，平板，移动电源), 所有需要检测DFP电流输出能力的UFP，所有支持PD的设备，都需要CC逻辑检测与端口控制芯片。换句话说，只有因为功耗较低而不需要检测电流能力的UFP(U盘，耳机，鼠标等)才不需要CC逻辑检测端口控制芯片。</p>
<h1 id="5-Type-C电力传输"><a href="#5-Type-C电力传输" class="headerlink" title="5. Type-C电力传输"></a>5. Type-C电力传输</h1><p>USB-Type-C规范允许通过VBUS和接地信号，从DFP 到UFP最多可以传递15W电能。当使用 “纯Type-C”解决方案时，只能使用5V电压传送这15W电能。如果 您为“纯Type-C”系统增加了USB PD规范，您就创建了一个“Type-C PD”系统，可将VBUS电压提至5V以上，最高提至20V，并将VBUS电流最大升至5A。在“纯Type-C”系统中，由DFP和UFP分别供电的Rp和Rd电阻器构成的分压器决定了VBUS电源的电流上限。UFP必须检测这个Rp/Rd 电压分压器电压，并用它来决定从VBUS电源获得的最大电流。这个Rp/Rd 电压分压器电压不是静态的;随着充电生态系统的环境变量不断改变，DFP可以动态改变其电流上限。UFP必须始终监测这个电压，并遵守DFP指示的新的VBUS电流上限。</p>
<p>纯Type-C”解决方案的这个行为-即“DFP指示，UFP遵守”的行为-揭示了“纯Type-C”系统的一个弱点。 “纯Type-C”系统中不存在协商，而Type-C PD系统可双向协商VBUS 电压和电流。通过向一个“纯Type-C”系统增添USB-PD，从而创建一个“Type-C PD”系统，您就能够为VBUS功率协商提供必要的灵活性。</p>
<p>实现USB-PD时，CC导线上承载的USB-PD双相标记编码(BMC)用于实现USB-Type-C端口之间的USB-PD通信。图7显示了USB-PD控制器如何连接CC导线，并向其引入BMC信令。图中只显示了一条CC线路(通过线缆连接的线路)。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C-PD%E7%B3%BB%E7%BB%9F.png" alt="USB-Type-C-PD系统"></p>
<h1 id="6-标记芯片如何以电子方式标记线缆组件"><a href="#6-标记芯片如何以电子方式标记线缆组件" class="headerlink" title="6. 标记芯片如何以电子方式标记线缆组件"></a>6. 标记芯片如何以电子方式标记线缆组件</h1><p>一个电子标记线缆组件(EMCA)就是一条USB-Type-C线缆，它使用标记芯片向DFP提供线缆的特性。线缆标记是通过将一个USB PD控制器芯片嵌入到线缆的一端或两端实现的 。这些标记芯片由VCONN 供电(或VBUS 供电，取决于具体设计)。VCONN是一个工作于2.7V和5.5V之间的低压轨，但功率被限制在1W。 VBUS 可以是一个高达20V的高压轨。虽然由VBUS 供电的标记芯片具备更大功率的优势，但电压较高的标记芯片也更贵。因此，大多数标记芯片由VCONN供电。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E7%94%B5%E5%AD%90%E6%A0%87%E8%AE%B0%E7%BA%BF%E7%BC%86%E7%BB%84%E4%BB%B6.png" alt="USB-Type-C电子标记线缆组件"></p>
<h2 id="1-标记芯片的配置"><a href="#1-标记芯片的配置" class="headerlink" title="1. 标记芯片的配置"></a>1. 标记芯片的配置</h2><p>某些EMCA在其中一个桨片卡上配备一个标记芯片，另一些则在两个桨片卡上分别配备一个标记芯片。如果使用了一个标记芯片，则必须在连接两个桨片卡的线缆中增加一根VCONN 导线。此外，必须在桨片卡上进行隔离，以防止两个VCONN同时由电压驱动，在VCONN 导线上发生冲突。设计一个或两个标记芯片的决定应考虑以下成本和收益：</p>
<ul>
<li>如果线缆是一条光缆，两个桨片卡之间没有铜线，您必须将两个标记芯片设计到线缆中。这样，无论插入DFP中的是哪一端，DFP都可以与线缆通信。</li>
<li>如果增加一条与线缆同长的VCONN导线以及增加一个用于安全整合两条VCONN导线的隔离电路的总成本高于增加两个标记芯片的成本，您应该考虑增加两个标记芯片。</li>
<li>有时候，为了简化制造和库存，在线缆中配备两个相同的桨片卡要比配备两个不同的桨片卡更简单。</li>
</ul>
<p>从DFP的角度而言，EMCA配备一个或两个标记芯片没有成本或收益问题。DFP以此只能为一个芯片供电，而且只与一个标记芯片通信。</p>
<h2 id="2-配置特性"><a href="#2-配置特性" class="headerlink" title="2. 配置特性"></a>2. 配置特性</h2><p>线缆控制器存储与线缆ID和能力有关的配置数据。这些特性包括：</p>
<ul>
<li>VBUS 导线的额定电流</li>
<li>线缆长度</li>
<li>EMCA的类型：被动或主动</li>
<li>线缆两端连接器的类型：Type-C to Type-C、Type-C to Type-A等</li>
<li>线缆中控制器的数量: 一个或两个</li>
<li>信令类型： USB 2.0、USB 3.1 Gen 1或USB 3.1 Gen 2</li>
<li>厂商ID：用于标识EMCA制造商的16位ID</li>
<li>用于标识EMCA产品的16位ID</li>
<li>对Alternate Modes(如DisplayPort、PCIe)的支持</li>
<li>对厂商专有协议(如厂商专有的对接协议)的支持</li>
</ul>
<p>DFP必须利用USB PD或 SOP* 枚举发现线缆的特性和UFP的功率要求。SOP是一个通配符ID，代表SOP、SOP’和SOP”。这些SOP ID可被视为Type-C多分支连接中的地址。SOP’代表距离DFP最近的EMCA标记芯片。SOP”代表距离DFP最远的EMCA标记芯片。SOP*枚举是建立PD联系的第一步，电子标记只能通过USB PD BMC实现。</p>
<h2 id="3-何时需要电子标记"><a href="#3-何时需要电子标记" class="headerlink" title="3. 何时需要电子标记"></a>3. 何时需要电子标记</h2><p>出现以下任意情况时，Type-C线缆需要电子标记：</p>
<ul>
<li>VBUS电流需要超过3A</li>
<li>需要USB 3.1 Gen2或10GHz USB</li>
<li>需要Alternate Mode</li>
</ul>
<h2 id="4-EMCA的类型"><a href="#4-EMCA的类型" class="headerlink" title="4. EMCA的类型"></a>4. EMCA的类型</h2><p>USB-Type-C 中有两种电子标记线缆组件(EMCA)：即被动EMCA和主动EMCA。其中的主要区别是：主动EMCA为SuperSpeed USB提供信号调节功能，如转接驱动器和重定时器功能。</p>
<p>以下是每种配置的一些例子。</p>
<h3 id="1-被动EMCA"><a href="#1-被动EMCA" class="headerlink" title="1. 被动EMCA"></a>1. 被动EMCA</h3><p>不改变USB数据信号的EMCA就是被动EMCA，可采用两种方式设计：配备或不配备贯穿整条线缆的VCONN 导线。</p>
<ul>
<li>每个插头配备一个线缆控制器的被动EMCA(即每条线缆配备两个线缆控制器)。此时， VCONN 导线不需要贯穿整条线缆(如下图所示)。</li>
</ul>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%AF%8F%E4%B8%AA%E6%8F%92%E5%A4%B4%E9%85%8D%E5%A4%87%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%BC%86%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E8%A2%AB%E5%8A%A8EMCA.png" alt="每个插头配备一个线缆控制器的被动EMCA"></p>
<ul>
<li>被动EMCA ,每条线缆只配备一个线缆控制器。此时，VCONN 导线将贯穿整条线缆。需要使用隔离元件以便于从线缆的一端的引入VCONN用于向线缆控制器供电(如下图所示)。</li>
</ul>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%AF%8F%E6%9D%A1%E7%BA%BF%E7%BC%86%E9%85%8D%E5%A4%87%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%BC%86%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E8%A2%AB%E5%8A%A8EMCA.png" alt="每条线缆配备一个线缆控制器的被动EMCA"></p>
<h3 id="2-主动EMCA"><a href="#2-主动EMCA" class="headerlink" title="2. 主动EMCA"></a>2. 主动EMCA</h3><p>加了一些额外器件比如信号驱动芯片等用于调节USB数据信号的EMCA。这可以实现更长的线缆或光缆。</p>
<p>很多人认为被动EMCA就是不需要电能的线缆，但是实际情况并非如此。被动和主动EMCA都需要某种形式的电能来驱动标记电路。</p>
<h2 id="5-设计考量"><a href="#5-设计考量" class="headerlink" title="5. 设计考量"></a>5. 设计考量</h2><p>探讨设计EMCA时应该考虑的USB-Type-C规范中的不同功率要求。</p>
<h3 id="1-通过USB-Type-C线缆提供的VBUS电能"><a href="#1-通过USB-Type-C线缆提供的VBUS电能" class="headerlink" title="1. 通过USB-Type-C线缆提供的VBUS电能"></a>1. 通过USB-Type-C线缆提供的VBUS电能</h3><p>对通过USB-Type-C 线缆提供的VBUS 电能的最低要求与现有USB线缆相同。EMCA可以使用VBUS -而不是VCONN -来驱动线缆电路，因为VBUS 贯穿了整条线缆。配有PD的VBUS支持更高的电压(最高20V)。因此，任何一条含有由VBUS 供电的电子元件的USB-Type-C线缆都必须能够承受20V电压。</p>
<p>所有VBUS引脚必须在USB-Type-C插头中互连。 全功能线缆每一端的VBUS引脚需要一个10毫微法的旁路电容器(30V的最小额定电压)。该旁路电容器应尽量靠近电源垫。所有GND引脚必须在USB-Type-C插头中互连。</p>
<h3 id="2-对VCONN的要求"><a href="#2-对VCONN的要求" class="headerlink" title="2. 对VCONN的要求"></a>2. 对VCONN的要求</h3><p>VCONN的功能不同于VBUS，因为VCONN 与线缆另一端相互隔离。VCONN独立于VBUS，而且与能够使用USB PD支持更高电压的VBUS 不同，VCONN 的固定为5V。表1显示了所支持的VCONN 范围，以及VCONN源应满足的其它功率要求。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C-VCONN%E6%BA%90%E7%9A%84%E7%89%B9%E6%80%A7.png" alt="VCONN源的特性"></p>
<p>为了降低VCONN上的功率 ，DFP可以在以下任意情况发生时关闭VCONN ：</p>
<ul>
<li>在一个CC引脚上检测到有效电压后(Rd在该引脚上)，未在另一个CC引脚上检测到Ra ;</li>
<li>完成线缆发现过程后，确定不再需要 VCONN ;</li>
<li>线缆发现消息未被线缆响应</li>
</ul>
<p>EMCA必须向VCONN引脚上的Ra接地层提供一个最大DC阻抗。电容器允许出现±20% 的公差，以便通过EMCA标记芯片中未经调整的片上电容器得到实现。表2列出了对EMCA中VCONN引脚上接地层的阻抗值。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C-EMCA%E7%BB%88%E7%BB%93%E8%A6%81%E6%B1%82.jpg" alt="EMCA终结要求"></p>
<p>如果没有VCONN，供电线缆不应妨碍CC的正常工作，其中包括UFP检测、电流宣称和USB PD运行。表3列出了使用VCONN电能的线缆应满足的要求。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C-VCONN%E7%89%B9%E6%80%A7.jpg" alt="VCONN特性"></p>
<ul>
<li>USB挂起模式下，电子标记线缆从VCONN 获取的电流不应超过7.5mA。</li>
<li>被动EMCA(不含数据总线信号调节电路)从VCONN 获取的功率不应超过70 mW。</li>
<li>主动EMCA(含数据总线信号调节电路)从VCONN 获取的功率不应超过1W。</li>
</ul>
<h3 id="3-VCONN供电配件"><a href="#3-VCONN供电配件" class="headerlink" title="3. VCONN供电配件"></a>3. VCONN供电配件</h3><p>VCONN供电配件是一个直接附着式UFP，它实现了Alternate Mode，而且能够只使用VCONN进行工作。VCONN供电配件向VCONN引脚上的Ra接地层提供一个最大阻抗。VCONN供电配件应能在2.7V-5.5V VCONN电压范围内工作。</p>
<h2 id="6-其它设计考量"><a href="#6-其它设计考量" class="headerlink" title="6. 其它设计考量"></a>6. 其它设计考量</h2><p>借助Type-C，一条线缆将具备多个功能，其中包括VBUS配电、USB数据和 alternate mode。alternate mode的一个常见例子是在一个或两个USB SuperSpeed 线路上传输的DisplayPort。电力、数据和图像的这种三合一打造了一个高电力、单线缆、超薄、易用的对接解决方案。为了使这条Type-C线缆同时支持Type-C和USB-PD功能，我们还需要采用其它技术。由于并非所有线缆都具备相同的能力或性能，需要一项USB-IF认证来表明某条线缆满足规范中的所有要求。谷歌、亚马逊等公司已公开表明，USB-Type-C线缆必须通过认证，任何未经认证的线缆都会给DFP和UFP带来安全风险。 在发起任何USB-PD供电确认之前，DFP将通过SOP*枚举来确认线缆是否获得了USB-IF认证。</p>
<p>与OEM线缆成品必须通过认证一样，Type-C线缆中的标记芯片也必须通过认证。赛普拉斯半导体公司的CCG2 EZ-PD PD控制器是市场上在首个认证测试日中首款通过认证的标记芯片。</p>
<p>赛普拉斯CCG2 EZ-PD标记芯片的可编程性可让用户轻松编程线缆特性。因为现在不同的线缆中的标记芯片内都植入了不同的厂商自定义信息，这一点变得越来越重要。此外，当最终用户的要求或参数发生变更时，或当USB-IF修改USB-Type-C或USB-PD规范时，这个特性也是必不可少的。用户可以使用赛普拉斯的CC引导装载程序技术，轻松地将这些变更重新编程到线缆成品中。</p>
<p>对EMCA应用中的线缆控制器的主要应用级要求包括：</p>
<ul>
<li>支持最新PD规范中定义的USB-PD协议;</li>
<li>支持BMC编码的物理层;</li>
<li>支持VCONN导线上内置的Ra电阻器;</li>
<li>能够使用VCONN电源向芯片供电;</li>
<li>支持用于实现每条线缆只配备一个线缆控制器的被动EMCA的内置隔离元件(图10);</li>
<li>支持通过断开Ra电阻器达到节能目的;</li>
<li>支持CC 和VCONN 引脚上内置的系统级防护;</li>
<li>支持引导装载程序，以便随着USB-Type-C和USB PD的演进，支持通过CC进行固件升级。</li>
</ul>
<h3 id="1-每条线缆配备一个CCG2的被动EMCA"><a href="#1-每条线缆配备一个CCG2的被动EMCA" class="headerlink" title="1. 每条线缆配备一个CCG2的被动EMCA"></a>1. 每条线缆配备一个CCG2的被动EMCA</h3><p>在这种EMCA架构中，其中一个插头中包含一个CCG2标记芯片。这种方法要求一条VCONN 导线贯穿整条线缆，这样一来，无论哪一头连接主机(DFP)，芯片都能获得供电。所需的隔离元件内置于CCG2中。有关这种方法和其它方法的详情，请参阅：设计USB 3.1 Type-C线缆。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%AF%8F%E6%9D%A1%E7%BA%BF%E7%BC%86%E9%85%8D%E5%A4%87%E4%B8%80%E4%B8%AACCG2%E7%9A%84%E8%A2%AB%E5%8A%A8EMCA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.png" alt="每条线缆配备一个CCG2的被动EMCA解决方案"></p>
<p>上图描述的是配备CCG2的被动EMCA，这种EMCA架构包含两个CCG2，一个插头包含一个。VCONN信号不贯穿整条线缆，而是终结于每个插头的CCG2。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%AF%8F%E4%B8%AA%E7%BA%BF%E7%BC%86%E6%8F%92%E5%A4%B4%E9%85%8D%E5%A4%87%E4%B8%80%E4%B8%AACCG2%E7%9A%84%E8%A2%AB%E5%8A%A8EMCA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.png" alt="每个线缆插头配备一个CCG2的被动EMCA解决方案"></p>
<p>上图描述的是配备CCG2的被动EMCA ，该EMCA支持PD。在线缆的两端各嵌入一个CCG2，分别由两端的USB-Type-C端口供电。第二个CCG2的存在，使得VCONN不需要贯穿整个线缆。</p>
<h3 id="2-每条线缆配备一个CCG2的主动EMCA"><a href="#2-每条线缆配备一个CCG2的主动EMCA" class="headerlink" title="2. 每条线缆配备一个CCG2的主动EMCA"></a>2. 每条线缆配备一个CCG2的主动EMCA</h3><p>主动EMCA的主要功能是通过在数据路径上添加一个信号驱动器提供信号调节功能。主动EMCA如需要配置/信号调节功能，可使用USB Power Delivery厂商自定义消息来寻找和枚举线缆属性。该方案需要从 VCONN电源获取连续电能，因此DFP不能关闭线缆的VCONN 供电。</p>
<p><img src="https://file.infonet.io/blog-files/USB/USB-Type-C%E6%AF%8F%E6%9D%A1%E7%BA%BF%E7%BC%86%E9%85%8D%E5%A4%87%E4%B8%80%E4%B8%AACCG2%E7%9A%84%E4%B8%BB%E5%8A%A8EMCA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.png" alt="每条线缆配备一个CCG2的主动EMCA解决方案"></p>
<p>上图描述的是配备CCG2的主动EMCA，其内嵌一个用于延长线缆长度的再驱动。</p>
<h2 id="7-小结"><a href="#7-小结" class="headerlink" title="7. 小结"></a>7. 小结</h2><p>“设计USB 3.1 Type-C线缆”详细阐述了制造商如何使用CCG2轻松设计被动电子标记线缆组件(EMCA)。“硬件设计指南”提供EZ-PD CCG2的硬件设计和PCB版图指南。这些指南有助确保最佳的信号完整性，以及对USB Power Delivery和Type-C规范的全面遵从。赛普拉斯拥有一个广泛的Type-C控制器产品组合(从单Type-C端口控制器EZ-PD CCG1, EZ-PD CCG2, EZ-PD CCG3到双端口控制器EZ-PD, CCG4)，此外还提供产品手册、开发套件、应用说明、软件下载、示例项目、演示视频等有用工具。</p>
<h1 id="7-其他介绍连接"><a href="#7-其他介绍连接" class="headerlink" title="7. 其他介绍连接"></a>7. 其他介绍连接</h1><ul>
<li><a href="https://blog.csdn.net/zoosenpin/article/details/49963031">https://blog.csdn.net/zoosenpin/article/details/49963031</a></li>
<li><a href="https://www.itread01.com/content/1495119613.html">https://www.itread01.com/content/1495119613.html</a></li>
<li><a href="http://www.via-ic.com/news_show.php?id=132">http://www.via-ic.com/news_show.php?id=132</a></li>
</ul>
<h1 id="8-版权"><a href="#8-版权" class="headerlink" title="8. 版权"></a>8. 版权</h1><ul>
<li><p>本文摘自电子工程世界：<a href="http://news.eeworld.com.cn/xfdz/2015/0323/article_40868.html">http://news.eeworld.com.cn/xfdz/2015/0323/article_40868.html</a></p>
</li>
<li><p>dzsc.com: <a href="http://www.dzsc.com/data/2016-8-11/110409.html">http://www.dzsc.com/data/2016-8-11/110409.html</a></p>
</li>
</ul>
<p>如有侵权烦请联系博主删除。</p>
]]></content>
      <tags>
        <tag>USB</tag>
      </tags>
  </entry>
  <entry>
    <title>dB dBm dBd dBi 相关知识</title>
    <url>/2021/06/03/dB-dBm-dBd-dBi-%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="dB-dBm-dBd-dBi-相关知识"><a href="#dB-dBm-dBd-dBi-相关知识" class="headerlink" title="dB dBm dBd dBi 相关知识"></a>dB dBm dBd dBi 相关知识</h1><blockquote>
<p>dB 就是把一个很大（后面跟一长串0的）或者很小（前面有一长串0的）的数比较简短地表示出来，它们都是功率增益的单位。</p>
</blockquote>
<h2 id="1、公式"><a href="#1、公式" class="headerlink" title="1、公式"></a>1、公式</h2><ul>
<li><p><strong>3dB ≈ 10lg2</strong>，即功率放大两倍（lg2 ≈ 0.30103）</p>
</li>
<li><p>dB = 10lg(功率A/功率B)，注：功率A/功率B就是放大倍数</p>
</li>
<li><p>dBm = 10log(功率/1mw)</p>
</li>
<li><p>dBd = 10log(天线输出功率/天线偶极子功率)，d 代表dipole（偶极子），dBd 为无单位的相对值</p>
</li>
<li><p>dBi = 10log(天线输出功率/全向天线功率)，i 代表 isotropic antenna（全向天线），dBi 为无单位的相对值</p>
</li>
</ul>
<h2 id="2、dB"><a href="#2、dB" class="headerlink" title="2、dB"></a>2、dB</h2><p>dB 表示一个<strong>相对值</strong>，纯粹的比值，只表示两个量的相对大小关系，没有单位。</p>
<p>当计算 A 的功率相比于 B 的功率大或小多少个 dB 时，按公式 10log(A/B) 计算。</p>
<p>如果采用两者的电压比计算，按公式 20log(A/B) 计算。</p>
<ul>
<li>A 功率比 B 功率大一倍，那么 10log(A/B) = 10lg(A/B) = 10lg2 ≈ (10×0.30103)dB = 3dB</li>
<li>A 功率是 B 功率的一半，那么 10log(A/B) = 10lg(A/B) = 10lg(1/2) ≈ (10×-0.30103)dB = -3dB</li>
</ul>
<h2 id="3、dBm"><a href="#3、dBm" class="headerlink" title="3、dBm"></a>3、dBm</h2><ul>
<li><p>dBm 表示<strong>功率跟 1mW 比</strong>，10log(P/1mW) = 10lg(P/1mW)</p>
</li>
<li><p>dBw 表示功率跟 1W 比，10log(P/1W) = 10lg(P/1W)</p>
</li>
</ul>
<p>A 的功率 P = 1mW，折算为 dBm 后为：10lg(1mW/1mW) = 0dBm</p>
<p>A 的功率 P = 40W，折算为 dBm 后为：10lg(40W/1mW) = 10lg(40000) = 10lg4 + 10lg(10000) = 2×10lg2 + 40lg(10)  = 46dBm</p>
<h2 id="4、dB-与-dBm-的运算"><a href="#4、dB-与-dBm-的运算" class="headerlink" title="4、dB 与 dBm 的运算"></a>4、dB 与 dBm 的运算</h2><p>总之，dB 是两个量之间的比值，表示两个量间的相对大小，而 dBm 表示功率绝对大小的值。</p>
<p>在计算中，需要注意 dBm 减另外一个 dBm 时，得到的结果是 dB。</p>
<ul>
<li><p>dBm 与 dBm 之间只有加减，没有乘除。而用得最多的是减法：dBm 减 dBm 实际上是两个功率相除，信号功率和噪声功率相除就是信噪比(SNR)。</p>
</li>
<li><p>dBm 与 dB 之间可加可减。</p>
</li>
<li><p>dB 与 dB 之间一般只是做加法。例：A 到 B 增益 20dB，B 到 C 衰减 35dB，则 A 到 C 就是 20-35=-15dB。</p>
</li>
</ul>
<h2 id="5、通信功率"><a href="#5、通信功率" class="headerlink" title="5、通信功率"></a>5、通信功率</h2><blockquote>
<p>简单来说，dB就是功率放大倍数的另一种表达方法，也就是说dB和放大倍数是一一对应的关系。</p>
</blockquote>
<h3 id="1、查表"><a href="#1、查表" class="headerlink" title="1、查表"></a>1、查表</h3><table>
<thead>
<tr>
<th align="center">放大倍数</th>
<th align="center">增益（dB）</th>
<th>放大倍数</th>
<th align="center">增益（dB）</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">0</td>
<td>19.95</td>
<td align="center">13</td>
</tr>
<tr>
<td align="center">1.26</td>
<td align="center">1</td>
<td>39.81</td>
<td align="center">16</td>
</tr>
<tr>
<td align="center">1.58</td>
<td align="center">2</td>
<td>100</td>
<td align="center">20</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">3</td>
<td>1,000</td>
<td align="center">30</td>
</tr>
<tr>
<td align="center">2.51</td>
<td align="center">4</td>
<td>10,000</td>
<td align="center">40</td>
</tr>
<tr>
<td align="center">3.16</td>
<td align="center">5</td>
<td>100,000</td>
<td align="center">50</td>
</tr>
<tr>
<td align="center">3.98</td>
<td align="center">6</td>
<td>1,000,000</td>
<td align="center">60</td>
</tr>
<tr>
<td align="center">5.01</td>
<td align="center">7</td>
<td>10,000,000</td>
<td align="center">70</td>
</tr>
<tr>
<td align="center">6.31</td>
<td align="center">8</td>
<td>100,000,000</td>
<td align="center">80</td>
</tr>
<tr>
<td align="center">7.94</td>
<td align="center">9</td>
<td>1,000,000,000</td>
<td align="center">90</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">10</td>
<td>10,000,000,000</td>
<td align="center">100</td>
</tr>
</tbody></table>
<span id="more"></span>

<p>可以看出常用的dB与倍数的对应关系：</p>
<p>增益为3dB，放大倍数为2倍；</p>
<p>增益为6dB，放大倍数为4倍；</p>
<p>增益为20dB，放大倍数为100倍；</p>
<p>增益为100dB，放大倍数为100亿倍。</p>
<h3 id="2、归纳理解"><a href="#2、归纳理解" class="headerlink" title="2、归纳理解"></a>2、归纳理解</h3><table>
<thead>
<tr>
<th align="center">放大倍数</th>
<th align="center">增益（dB）</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">3.98</td>
<td align="center">6</td>
</tr>
<tr>
<td align="center">7.94</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">19.95</td>
<td align="center">13</td>
</tr>
<tr>
<td align="center">39.81</td>
<td align="center">16</td>
</tr>
<tr>
<td align="center">100</td>
<td align="center">20</td>
</tr>
<tr>
<td align="center">1,000</td>
<td align="center">30</td>
</tr>
<tr>
<td align="center">10,000</td>
<td align="center">40</td>
</tr>
</tbody></table>
<p>可以看出dB的数值相加，等于放大倍数数值相乘。</p>
<p>例：9dB = 3dB + 6dB = (2×4) 倍，也就是 9dB 对应等放大倍数为 8 倍；13dB = 3dB + 10dB = (2×10) 倍。</p>
<p>只要记住3dB和10dB的数值，就能够归纳出大多数常用数值的放大倍数了。</p>
<h3 id="3、数学公式理解"><a href="#3、数学公式理解" class="headerlink" title="3、数学公式理解"></a>3、数学公式理解</h3><p>增益和放大倍数的公式为：增益 = 10lg(放大倍数)</p>
<p>A = lg(B) ==&gt;&gt; 10^A = B</p>
<h2 id="6、扩展知识：声音大小"><a href="#6、扩展知识：声音大小" class="headerlink" title="6、扩展知识：声音大小"></a>6、扩展知识：声音大小</h2><table>
<thead>
<tr>
<th align="center">声音分贝</th>
<th align="center">场景</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0分贝</td>
<td align="center">刚能听到的声音</td>
</tr>
<tr>
<td align="center">15 分贝以下</td>
<td align="center">感觉安静</td>
</tr>
<tr>
<td align="center">30 分贝</td>
<td align="center">耳语的音量大小</td>
</tr>
<tr>
<td align="center">40 分贝</td>
<td align="center">冰箱的嗡嗡声</td>
</tr>
<tr>
<td align="center">60分贝</td>
<td align="center">正常交谈的声音</td>
</tr>
<tr>
<td align="center">70分贝</td>
<td align="center">相当于走在闹市区</td>
</tr>
<tr>
<td align="center">85分贝</td>
<td align="center">汽车穿梭的马路上</td>
</tr>
<tr>
<td align="center">95分贝</td>
<td align="center">摩托车启动声音</td>
</tr>
<tr>
<td align="center">100分贝</td>
<td align="center">装修电钻的声音</td>
</tr>
<tr>
<td align="center">110分贝</td>
<td align="center">卡拉OK、大声播放 MP3 的声音</td>
</tr>
<tr>
<td align="center">120分贝</td>
<td align="center">飞机起飞时的声音</td>
</tr>
<tr>
<td align="center">150分贝</td>
<td align="center">燃放烟花爆竹的声音</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Windows10 关闭 defender 的方法</title>
    <url>/2019/03/09/Windows10-%E5%85%B3%E9%97%AD-defender/</url>
    <content><![CDATA[<h1 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1. 步骤"></a>1. 步骤</h1><ol>
<li>快捷键 <strong>WIN+R</strong> 打开运行工具</li>
<li>输入 <strong>gpedit.msc</strong> 回车</li>
<li>计算机配置 -&gt; 管理模板 -&gt; Windows 组件 -&gt; Windows Defender 防病毒程序 -&gt; 关闭 Windows Defender 防病毒程序</li>
<li>双击进入选择已启用确定即可。</li>
</ol>
<span id="more"></span>

<h1 id="2-配图"><a href="#2-配图" class="headerlink" title="2. 配图"></a>2. 配图</h1><p><img src="https://file.infonet.io/blog-files/Win10/win%2Br.png" alt="win+r"><br><img src="https://file.infonet.io/blog-files/Win10/windows10-defender.png" alt="windows10-defender"></p>
]]></content>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/09/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>从网络中获取原理图符号、PCB 封装、3D 库</title>
    <url>/2019/03/09/%E4%BB%8E%E7%BD%91%E7%BB%9C%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%8E%9F%E7%90%86%E5%9B%BE%E7%AC%A6%E5%8F%B7%E5%92%8C-PCB-%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<h1 id="网址链接"><a href="#网址链接" class="headerlink" title="网址链接"></a>网址链接</h1><p>首先放两个网站出来，都可以从中搜索元器件型号，然后选择需要下载的文件。</p>
<ul>
<li><a href="https://www.ultralibrarian.com/">Ultra Librarian - PCB Component Data</a></li>
<li><a href="https://www.snapeda.com/">SnapEDA | Free PCB Footprints and Schematic Symbols</a></li>
</ul>
<span id="more"></span>

<h1 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h1><ul>
<li><p>Ultra Librarian 可以支持的软件<br><img src="https://file.infonet.io/blog-files/PCB/UltraLibrarian-EDA-list.png" alt="UltraLibrarian-EDA-list"></p>
</li>
<li><p>SnapEDA 可以支持的软件<br><img src="https://file.infonet.io/blog-files/PCB/SnapEDA-EDA-list.png" alt="SnapEDA-EDA-list"></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>图床服务器介绍</title>
    <url>/2020/03/21/%E5%9B%BE%E5%BA%8A%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="1-Cheverrto"><a href="#1-Cheverrto" class="headerlink" title="1. Cheverrto"></a>1. Cheverrto</h1><p>精美、强大的在线图床程序，完善的后台管理功能。免费版就够用，只能将图片存储于 VPS 本地。如果 VPS 带宽足、三网友好，可以采用此方案。</p>
<p>Get Start: <a href="https://chevereto.com/get-started">https://chevereto.com/get-started</a></p>
<h1 id="2-EasyImages"><a href="#2-EasyImages" class="headerlink" title="2. EasyImages"></a>2. <strong>EasyImages</strong></h1><p>EasyImages 程序也有一两年时间看到最新有改版更新，这款图床程序是可以自建到主机中的，而且采用的是常用的 PHP 程序，同时不需要数据库支持，搭建起来应该是比较容易。</p>
<p>项目地址：<a href="https://github.com/icret/EasyImages2.0">https://github.com/icret/EasyImages2.0</a></p>
<span id="more"></span>

<h1 id="3-幻想领域"><a href="#3-幻想领域" class="headerlink" title="3. 幻想领域"></a>3. 幻想领域</h1><p>美观简洁的微博图床程序。免费，使用新浪微博上传 API，可以将图片存储于微博。支持多用户，可以查看上传历史。</p>
<p>项目地址：<a href="https://github.com/iAJue/Fantasy-field">https://github.com/iAJue/Fantasy-field</a></p>
<h1 id="4-树洞外链"><a href="#4-树洞外链" class="headerlink" title="4. 树洞外链"></a>4. 树洞外链</h1><p>树洞外链不仅支持图片外链，还支持其他文件，例如 PDF/CSS 等，后台可以设置允许的文件后缀。支持将图片存储于 VPS 本地、又拍云、七牛云、阿里 OSS、远程服务器等。</p>
<p>项目地址：<a href="https://github.com/HFO4/shudong-share">https://github.com/HFO4/shudong-share</a></p>
<h1 id="5-ImgURL"><a href="#5-ImgURL" class="headerlink" title="5. ImgURL"></a>5. ImgURL</h1><p>ImgURL 是一款简单、纯粹的图床程序，使用 PHP+SQLite 3 开发，不需要复杂的配置，做到开箱即用。ImgURL 支持拽拖上传，一键生成链接、一键复制，支持限制访客上传数量、图片压缩、图片鉴黄识别。</p>
<p>项目地址：<a href="https://github.com/helloxz/imgurl">https://github.com/helloxz/imgurl</a></p>
<h1 id="6-Lychee"><a href="#6-Lychee" class="headerlink" title="6. Lychee"></a>6. Lychee</h1><p>简单、漂亮，需 PHP 5.5 以上、MySQL 环境。</p>
<p>项目地址：<a href="https://github.com/electerious/Lychee">https://github.com/electerious/Lychee</a></p>
<h1 id="7-qchan"><a href="#7-qchan" class="headerlink" title="7. qchan"></a>7. qchan</h1><p>轻量级 PHP 图床程序。需 PHP&gt;5.3.0 以上。<br>项目地址：<a href="https://github.com/qakcn/qchan">https://github.com/qakcn/qchan</a></p>
]]></content>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>卧室插座面板改造</title>
    <url>/2019/03/13/%E5%8D%A7%E5%AE%A4%E6%8F%92%E5%BA%A7%E9%9D%A2%E6%9D%BF%E6%94%B9%E9%80%A0/</url>
    <content><![CDATA[<h1 id="1-改造背景"><a href="#1-改造背景" class="headerlink" title="1. 改造背景"></a>1. 改造背景</h1><p>由于卧室里的摆设改变了一下，导致书桌附近的一个插座面板孔数不够（之前只有一个三孔一位的面板），就想到换一个位数多一些的面板。</p>
<h1 id="2-改造知识点"><a href="#2-改造知识点" class="headerlink" title="2. 改造知识点"></a>2. 改造知识点</h1><p><strong>以下家庭用电 220V 为例，计算铜导线大约功率/载流值</strong><br>当然功率/载流还跟走线方式有关系，比如明装、暗装，暗装又可分钢管、PVC 管内走线。</p>
<table>
<thead>
<tr>
<th align="center">导线横截面积</th>
<th align="center">功率/载流</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0.75 平方毫米</td>
<td align="center">1.5KW / 7A</td>
</tr>
<tr>
<td align="center">1.0 平方毫米</td>
<td align="center">2.2KW / 10A</td>
</tr>
<tr>
<td align="center">1.5 平方毫米</td>
<td align="center">3.0KW / 14A</td>
</tr>
<tr>
<td align="center">2.5 平方毫米</td>
<td align="center">4.8KW / 22A</td>
</tr>
<tr>
<td align="center">4.0 平方毫米</td>
<td align="center">6.6KW / 30A</td>
</tr>
</tbody></table>
<p><strong>说明：上表格只能作为估算，不是特别准确。<em>室内走线比较容易记住的就是按照 1平方毫米载流 10A 去计算。</em></strong></p>
<span id="more"></span>

<h1 id="3-改造流程"><a href="#3-改造流程" class="headerlink" title="3. 改造流程"></a>3. 改造流程</h1><h2 id="如图为卧室的面板，需要更换多位数的，如下图红色框框内。"><a href="#如图为卧室的面板，需要更换多位数的，如下图红色框框内。" class="headerlink" title="如图为卧室的面板，需要更换多位数的，如下图红色框框内。"></a>如图为卧室的面板，需要更换多位数的，如下图红色框框内。</h2><p><img src="https://file.infonet.io/blog-files/life/socket-panel-old.jpg" alt="socket-panel-old"></p>
<h2 id="购置需要更换的插座面板"><a href="#购置需要更换的插座面板" class="headerlink" title="购置需要更换的插座面板"></a>购置需要更换的插座面板</h2><p>如下为新购置的面板<br>图片右边是把面板固定在盒子（底座）的螺丝以及盖住螺丝孔的帽。<br>插座盒子就用旧的，是否通用要核对下。<br><img src="https://file.infonet.io/blog-files/life/socket-panel.png" alt="socket-panel"></p>
<h2 id="面板接线"><a href="#面板接线" class="headerlink" title="面板接线"></a>面板接线</h2><p>如下为面板背面接线<br>遵循左零右火（从背面看就是左火右零；火线为红色，零线为蓝色），地线为黄绿线的规则。<br>（PS:我因手上没有黄绿线，在此用蓝线代替）<br><img src="https://file.infonet.io/blog-files/life/socket-panel-button.png" alt="socket-panel-button"></p>
<h2 id="再制作一个电源指示灯"><a href="#再制作一个电源指示灯" class="headerlink" title="再制作一个电源指示灯"></a>再制作一个电源指示灯</h2><p>一个 LED 串接一个 150K 左右的电阻，接到零线和火线之间，接线的时候注意 LED 的正负极<br><img src="https://file.infonet.io/blog-files/life/socket-panel-led.jpg" alt="socket-panel-led"></p>
<h2 id="将主线接到上上图箭头所指的位置"><a href="#将主线接到上上图箭头所指的位置" class="headerlink" title="将主线接到上上图箭头所指的位置"></a>将主线接到上上图箭头所指的位置</h2><p><img src="https://file.infonet.io/blog-files/life/socket-panel-in.jpg" alt="socket-panel-in"></p>
<h2 id="最后效果图"><a href="#最后效果图" class="headerlink" title="最后效果图"></a>最后效果图</h2><p><img src="https://file.infonet.io/blog-files/life/socket-panel-new.jpg" alt="socket-panel-new"></p>
]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>域名注册商介绍</title>
    <url>/2020/03/21/%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E5%95%86%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<blockquote>
<p>个人比较推荐使用 <strong><a href="https://www.namesilo.com/">Namesilo</a></strong>, 然后配合 <strong><a href="https://www.cloudflare.com/">Cloudflare</a> 公共 DNS 解析器</strong>使用，统一管理所有的域名。<br>下面是各家域名注册商优缺点对比，当然不够全面仅供参考。</p>
</blockquote>
<h1 id="1-Namesilo"><a href="#1-Namesilo" class="headerlink" title="1. Namesilo"></a>1. <a href="https://www.namesilo.com/">Namesilo</a></h1><ul>
<li>支持的顶级域名非常多</li>
<li>价格最便宜</li>
<li>支持支付宝付款</li>
<li>免费隐私保护</li>
<li>操作界面简单</li>
<li>只支持英文</li>
</ul>
<span id="more"></span>

<h1 id="2-Gandi"><a href="#2-Gandi" class="headerlink" title="2. Gandi"></a>2. <a href="https://www.gandi.net/zh-Hans">Gandi</a></h1><ul>
<li>支持的顶级域名多</li>
<li>支持中文</li>
<li>注册域名免费域名邮箱</li>
<li>支持支付宝付款</li>
</ul>
<h1 id="3-NameCheap"><a href="#3-NameCheap" class="headerlink" title="3. NameCheap"></a>3. <a href="https://www.namecheap.com/">NameCheap</a></h1><ul>
<li>价格合理</li>
<li>免费隐私保护</li>
<li>口碑好</li>
<li>操作界面简单，用户体验好</li>
<li>售后好</li>
</ul>
<h1 id="4-GoDaddy"><a href="#4-GoDaddy" class="headerlink" title="4. GoDaddy"></a>4. <a href="https://sg.godaddy.com/">GoDaddy</a></h1><ul>
<li>用户多</li>
<li>支持语言多</li>
<li>支持支付宝</li>
<li>价格贵</li>
<li>服务不好</li>
</ul>
<h1 id="5-Freenom"><a href="#5-Freenom" class="headerlink" title="5. Freenom"></a>5. <a href="https://www.freenom.com/">Freenom</a></h1><ul>
<li>可以申请免费一年的域名</li>
<li>续费价格低</li>
<li>不能快速查看是否被注册</li>
</ul>
<h1 id="6-NameBeta"><a href="#6-NameBeta" class="headerlink" title="6. NameBeta"></a>6. <a href="https://namebeta.com/">NameBeta</a></h1><ul>
<li>一个快速帮你找到合适域名, 并列出所有可能注册的提供商价格的工具。</li>
<li>支持 Chrome 插件。</li>
</ul>
<h1 id="7-其他"><a href="#7-其他" class="headerlink" title="7. 其他"></a>7. 其他</h1><ul>
<li>国内的腾讯云、阿里云等等，但是不推荐在国内注册。</li>
<li><a href="https://www.hover.com/">Hover</a></li>
<li><a href="https://www.wealthyaffiliate.com/">Wealthyaffiliate</a></li>
<li><a href="https://www.name.com/zh-cn/">Name</a></li>
<li><a href="https://www.enom.com/">Enom</a></li>
<li><a href="https://www.tucows.com/">Tucows</a></li>
<li><a href="https://www.ipower.com/">Ipower</a></li>
<li><a href="https://www.networksolutions.com/">NetworkSolutions</a></li>
<li><a href="https://www.netfirms.com/">Netfirms</a></li>
</ul>
]]></content>
      <tags>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>将博客系统从Typecho迁移至Hexo</title>
    <url>/2019/04/22/%E5%B0%86%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%BB%8ETypecho%E8%BF%81%E7%A7%BB%E8%87%B3Hexo/</url>
    <content><![CDATA[<p>前段时间在网上看到有个静态博客系统 <a href="https://hexo.io/">Hexo</a>，看了下简介很心动就研究了下。</p>
<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><ul>
<li><p><strong><a href="https://hexo.io/">Hexo</a></strong></p>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。当然缺点也很明显，就是博客文章多了之后，由博客文件转成 Html 静态文件就变得很慢。<br>博客自带的主题配置简单，若采用 <a href="https://theme-next.iissnan.com/">Next</a> 主题后配置较为复杂，当然功能也就更多。<br>主题 Next 教程：<a href="https://theme-next.org/docs/getting-started/">Next</a> 配置文档。<br>Hexo 和 Next 都是开源的，后续有新版本了再升级。</p>
<p>搭建环境：VPS + 域名 + Hexo-v3.8.0 + Next.Gemini-v7.1.0<br>ps: Hexo 博客系统也可部署在 <a href="https://pages.github.com/">GitHub Pages</a> 上, 或者 Coding 上。</p>
<p><em>关于 Next 的配置说明： 由于 Next 是开源的，所以不断有新的版本说来，相关的配置最好去从官方文档去查找，不要找网上的一些配置教程，因为有很大的可能是已经过时了。</em></p>
</li>
</ul>
<span id="more"></span>

<ul>
<li><p><strong><a href="http://typecho.org/">Typecho</a></strong></p>
<p>Typecho is a PHP Blogging Platform. Simple and Powerful.<br>轻量高效. 仅仅7 张数据表，加上不足400KB 的代码，就实现了完整的插件与模板机制。超低的 CPU 和内存使用率，足以发挥主机的最高性能。<br>搭建环境：LAMP(or LNMP)<br>之前安装的 Typecho 是 v1.1 版本的。</p>
</li>
</ul>
<h1 id="2-总结"><a href="#2-总结" class="headerlink" title="2. 总结"></a>2. 总结</h1><p>Hexo: 每篇文章就是一个 “xxx.md” 文件，方便 Git 管理，后续也方便移植到别的博客系统。<br>Typecho: PHP + 数据库 形式储存，所有的操作都是在网页端（博客系统的控制台）操作。<br>当然共同的优点就是简约。</p>
<p>我个人是非常喜欢博客文章以文件的形式储存，可以本地编辑器打开编辑，更直观。不太喜欢基于数据库存储的。<br>现在是刚开始玩博客的阶段，看到新鲜的事物都想去折腾一番。（笑…）<br>若后续文章数量达到几百篇的时候，Hexo 生成 Html 静态文件效率没有提高，也会有可能再转去 Typecho。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Typecho</tag>
      </tags>
  </entry>
  <entry>
    <title>如何制作Win10系统盘或安装盘</title>
    <url>/2019/05/01/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9CWin10%E7%B3%BB%E7%BB%9F%E7%9B%98%E6%88%96%E5%AE%89%E8%A3%85%E7%9B%98/</url>
    <content><![CDATA[<h1 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h1><ul>
<li><p>写盘软件：<br> <em>此教程需要使用一次，为此我们免费下载试用，若要经常使用请购买正版软件。</em><br> <strong><a href="https://cn.ultraiso.net/xiazai.html">点击此处免费下载：免费下载UltraISO软碟通官方中文版</a></strong></p>
</li>
<li><p>Windows10 系统：<br> 建议在下面的网址中按需选择相应的系统，这里演示采用 Windows10 系统。<br> <strong><a href="http://msdn.itellyou.cn/">点击此处打开网页下载 Windows10: MSDN, 我告诉你</a></strong><br> 我也比较推荐大家都用 Windows10 系统，因为驱动相对完整一些。</p>
</li>
</ul>
<span id="more"></span>

<p><img src="https://file.infonet.io/blog-files/Win10/i-tell-you-win10.png" alt="i-tell-you-win10"></p>
<h1 id="2-写盘"><a href="#2-写盘" class="headerlink" title="2. 写盘"></a>2. 写盘</h1><ul>
<li>打开要写入到 U 盘的 ISO 文件：文件 -&gt; 打开 -&gt; 选择应对的 ISO 文件(本次用 xubuntu 代替)</li>
<li>写入 U 盘：启动 -&gt; 写入硬盘映像 -&gt; 选择对应的<strong>硬盘驱动器</strong> -&gt; (格式化+)写入 -&gt; 等待完成<br><img src="https://file.infonet.io/blog-files/Win10/UltraISO.png" alt="UltraISO"></li>
</ul>
<h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h1><ul>
<li>此款软件也可以写入其他 ISO 文件到 U 盘或者硬盘。</li>
<li>Windows 系统的安装盘通过这种方法制作相对较好，之前测试过在 Linux 系统下通过 <strong>dd</strong> 命令到 U 盘，结果不能启动。</li>
<li>Linux 用户可以通过 <strong>dd</strong> 命令来写入非 Windows ISO 文件。</li>
</ul>
]]></content>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>微带线与带状线区别</title>
    <url>/2021/06/08/%E5%BE%AE%E5%B8%A6%E7%BA%BF%E4%B8%8E%E5%B8%A6%E7%8A%B6%E7%BA%BF%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h1 id="微带线与带状线区别"><a href="#微带线与带状线区别" class="headerlink" title="微带线与带状线区别"></a>微带线与带状线区别</h1><h1 id="1、带状线"><a href="#1、带状线" class="headerlink" title="1、带状线"></a>1、带状线</h1><p>走在内层 (stripline/double stripline)，埋在 PCB 内部的带状走线。如下图</p>
<img src="/2021/06/08/%E5%BE%AE%E5%B8%A6%E7%BA%BF%E4%B8%8E%E5%B8%A6%E7%8A%B6%E7%BA%BF%E5%8C%BA%E5%88%AB/%E5%B8%A6%E7%8A%B6%E7%BA%BF.png" class="" title="带状线">

<p>蓝色部分是导体，绿色部分是PCB的绝缘电介质，stripline 是嵌在两层导体之间的带状导线。</p>
<p>因为 stripline 是嵌在两层导体之间，所以它的电场分布都在两个包它的导体（平面）之间，不会辐射出去能量，也不会受到外部的辐射干扰。但是由于它的周围全是电介质（介电常数比1大），所以信号在 stripline 中的传输速度比在 microstrip line 中慢！</p>
<h1 id="2、微带线"><a href="#2、微带线" class="headerlink" title="2、微带线"></a>2、微带线</h1><p>是走在表面层 (microstrip)，附在PCB表面的带状走线。如下图</p>
<img src="/2021/06/08/%E5%BE%AE%E5%B8%A6%E7%BA%BF%E4%B8%8E%E5%B8%A6%E7%8A%B6%E7%BA%BF%E5%8C%BA%E5%88%AB/%E5%BE%AE%E5%B8%A6%E7%BA%BF1.png" class="" title="微带线1">

<img src="/2021/06/08/%E5%BE%AE%E5%B8%A6%E7%BA%BF%E4%B8%8E%E5%B8%A6%E7%8A%B6%E7%BA%BF%E5%8C%BA%E5%88%AB/%E5%BE%AE%E5%B8%A6%E7%BA%BF2.png" class="" title="微带线2">

<p>蓝色部分是导体，绿色部分是 PCB 的绝缘电介质，上面的蓝色小块儿是 microstrip line，黄色部分是环氧有机材料。</p>
<p>由于 microstrip line（微带线）的一面裸露在空气里面（可以向周围形成辐射或受到周围的辐射干扰），而另一面附在PCB的绝缘电介质上，所以它形成的电场一部分分布在空中，另一部分分布在PCB的绝缘介质中。但是 microstrip line 中的信号传输速度要比 stripline 中的信号传输速度快，这是其突出的优点！</p>
]]></content>
      <tags>
        <tag>dB</tag>
      </tags>
  </entry>
  <entry>
    <title>常用百5与百1电阻值</title>
    <url>/2020/04/20/%E5%B8%B8%E7%94%A8%E7%99%BE5%E4%B8%8E%E7%99%BE1%E7%94%B5%E9%98%BB%E5%80%BC/</url>
    <content><![CDATA[<blockquote>
<p>许多刚进行电路设计的人员会在设计电路中将电阻任意取值，这会导致该电阻无法购买到。<br>实际上国家标准规定了电阻的阻值按其精度分为两大系列，分别为 E-24 系列和 E-96 系列，E-24 系列精度为 5%，E-96 系列为 1%。<br>在这两种系列之外的电阻为非标电阻，较难采购。<br>下面列出了常用的 5% 和 1% 精度电阻的标称值，供大家设计时参考。</p>
</blockquote>
<h1 id="1-常用-5-的电阻值"><a href="#1-常用-5-的电阻值" class="headerlink" title="1. 常用 5% 的电阻值"></a>1. 常用 5% 的电阻值</h1><p><img src="https://file.infonet.io/blog-files/Elec/%E5%B8%B8%E7%94%A8%E7%94%B5%E9%98%BB%E5%80%BC-5%25.png" alt="常用电阻值-5%"></p>
<h1 id="2-pdf-文档下载连接"><a href="#2-pdf-文档下载连接" class="headerlink" title="2. pdf 文档下载连接"></a>2. pdf 文档下载连接</h1><p><a href="https://file.infonet.io/blog-files/Elec/%E7%94%B5%E9%98%BB%E7%B2%BE%E5%BA%A6%E4%B8%8E%E5%B8%B8%E7%94%A8%E9%98%BB%E5%80%BC.pdf">电阻精度与常用阻值.pdf</a></p>
<p><a href="https://file.infonet.io/blog-files/Elec/%E7%94%B5%E9%98%BB%E5%80%BC%E5%AF%B9%E7%85%A7%E8%A1%A8.pdf">电阻值对照表.pdf</a></p>
]]></content>
      <tags>
        <tag>电阻</tag>
      </tags>
  </entry>
  <entry>
    <title>思维导图软件介绍</title>
    <url>/2020/03/21/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E8%BD%AF%E4%BB%B6%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<blockquote>
<p>主要推荐 XMind 和 MindMaster</p>
</blockquote>
<h2 id="1-XMind"><a href="#1-XMind" class="headerlink" title="1. XMind"></a>1. <a href="https://www.xmind.cn/">XMind</a></h2><ul>
<li>跨平台（Windows、macOS、Linux、iOS、Android）</li>
<li>业界大佬</li>
<li>不免费，￥388/年，蛮贵</li>
<li>UI 很好看，丰富的样式、模板、剪贴画、布局</li>
<li>试用版可导出图片、SVG 和 PDF (都带水印)</li>
</ul>
<h2 id="2-MindMaster"><a href="#2-MindMaster" class="headerlink" title="2. MindMaster"></a>2. <a href="https://www.edrawsoft.cn/mindmaster/">MindMaster</a></h2><ul>
<li>跨平台（Windows、macOS、Linux、Web、IOS、Android）</li>
<li>支持导出 Office/PDF/有道云笔记/印象笔记等常用办公文档和各种图片格式</li>
<li>UI 好看，丰富的样式、模板、剪贴画、布局</li>
<li>试用版可导出图片</li>
<li>Mac 版有残缺，适合 Windows 用户</li>
<li>不免费，最低 ￥11/月<ul>
<li>全平台账号，可使用桌面版、网页版和移动版</li>
<li>登录账号即可完成产品授权</li>
<li>解锁软件所有功能</li>
<li>1G个人云空间</li>
<li>始终使用最新版本</li>
<li>10000+社区导图查阅</li>
<li>支持管理登录设备</li>
<li>邮件和QQ技术支持</li>
</ul>
</li>
</ul>
<span id="more"></span>

<h2 id="3-FreeMind"><a href="#3-FreeMind" class="headerlink" title="3. FreeMind"></a>3. <a href="http://www.freemind.org.cn/">FreeMind</a></h2><ul>
<li>完全免费，软件开源</li>
<li>跨平台（Windows、macOS、Linux）</li>
<li>UI 不好看，样式不丰富</li>
<li>免费导出 PDF (需完整版本)</li>
</ul>
<h2 id="4-Mindnode"><a href="#4-Mindnode" class="headerlink" title="4. Mindnode"></a>4. <a href="https://mindnode.com/">Mindnode</a></h2><ul>
<li>只支持苹果设备</li>
<li>样式丰富、美观</li>
<li>不免费，14 天试用，$19.99/年，免费升级</li>
<li>免费版的功能少</li>
<li>英文版</li>
</ul>
<h2 id="5-百度脑图"><a href="#5-百度脑图" class="headerlink" title="5. 百度脑图"></a>5. <a href="https://naotu.baidu.com/">百度脑图</a></h2><ul>
<li>只支持 Web 端</li>
<li>免费</li>
<li>样式少，UI 不太美观</li>
<li>导出格式多，但不支持 PDF</li>
</ul>
<h2 id="6-坚果云思维导图"><a href="#6-坚果云思维导图" class="headerlink" title="6. 坚果云思维导图"></a>6. <a href="https://www.jianguoyun.com/">坚果云思维导图</a></h2><ul>
<li>免费</li>
<li>跨平台（Windows、macOS、Linux、Web）</li>
<li>UI 好看，但不支持跟换样式</li>
<li>注册需要填写手机号码</li>
<li>适合轻量级用户</li>
</ul>
<h2 id="7-iMindMap"><a href="#7-iMindMap" class="headerlink" title="7. iMindMap"></a>7. <a href="https://www.imindmap.cc/">iMindMap</a></h2><ul>
<li>跨平台（Windows、macOS）</li>
<li>最便宜￥199，基本功能，同时支持1台电脑激活 </li>
<li>UI 好看，丰富的样式</li>
</ul>
<h2 id="8-MindManager"><a href="#8-MindManager" class="headerlink" title="8. MindManager"></a>8. <a href="https://www.mindjet.com/cn/">MindManager</a></h2><ul>
<li>30 天全部功能免费试用</li>
<li>不能直接下载</li>
<li>不知道是否跨平台</li>
</ul>
<h2 id="9-其他"><a href="#9-其他" class="headerlink" title="9. 其他"></a>9. 其他</h2><ul>
<li><a href="https://www.wps.cn/">WPS</a></li>
<li><a href="https://coggle.it/">Coggle</a></li>
<li><a href="https://www.mindmeister.com/zh">MindMeister</a></li>
<li><a href="https://www.spiderscribe.net/">SpiderScribe</a></li>
<li><a href="https://stormboard.com/">Stormboard</a></li>
<li><a href="http://mubu.com/">幕布</a></li>
<li><a href="https://www.processon.com/">ProcessOn</a></li>
<li><a href="https://www.mindjet.com/">Mindjet</a></li>
<li><a href="https://www.mindomo.com/zh/">Mindomo</a></li>
<li><a href="https://www.mindline.cn/">MindLine</a></li>
<li><a href="https://www.mindvectorweb.com/">Mind Vector</a></li>
<li><a href="https://www.mindlyapp.com/">Mindly</a></li>
<li><a href="https://simplemind.eu/">SimpleMind</a></li>
<li><a href="https://www.marginnote.com/">MarginNote</a></li>
</ul>
]]></content>
      <tags>
        <tag>思维导图</tag>
      </tags>
  </entry>
  <entry>
    <title>文件共享服务器: CuteHttpFileServer/chfs</title>
    <url>/2019/05/01/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%99%A8-CuteHttpFileServer-chfs/</url>
    <content><![CDATA[<p>介绍一个轻便、简洁、易用、免费的、HTTP协议的文件共享服务器：**<a href="http://iscute.cn/chfs">CuteHttpFileServer/chfs</a>**</p>
<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><ul>
<li>单个文件，整个软件只有一个可执行程序，无配置文件等其他文件</li>
<li>跨平台运行，支持主流平台：Windows, Linux, Mac</li>
<li>界面简洁，简单易用</li>
<li>支持扫码下载和手机端访问，手机与电脑之间共享文件非常方便</li>
<li>支持账户权限控制和地址过滤</li>
<li>支持快速分享文字片段</li>
<li>支持webdav协议</li>
</ul>
<h1 id="2-下载和使用"><a href="#2-下载和使用" class="headerlink" title="2. 下载和使用"></a>2. 下载和使用</h1><p>请移步到 CuteHttpFileServer 官网：<strong><a href="http://iscute.cn/chfs">http://iscute.cn/chfs</a></strong></p>
]]></content>
      <tags>
        <tag>文件共享</tag>
      </tags>
  </entry>
  <entry>
    <title>电子线路焊接助焊剂</title>
    <url>/2020/03/25/%E7%94%B5%E5%AD%90%E7%BA%BF%E8%B7%AF%E7%84%8A%E6%8E%A5%E5%8A%A9%E7%84%8A%E5%89%82/</url>
    <content><![CDATA[<h1 id="1-助焊剂-flux-分类"><a href="#1-助焊剂-flux-分类" class="headerlink" title="1. 助焊剂(flux)分类"></a>1. 助焊剂(flux)分类</h1><p><img src="https://file.infonet.io/blog-files/Elec/%E5%8A%A9%E7%84%8A%E5%89%82.png" alt="助焊剂(flux)"></p>
<h1 id="2-助焊剂作用"><a href="#2-助焊剂作用" class="headerlink" title="2. 助焊剂作用"></a>2. 助焊剂作用</h1><ul>
<li>在焊接工艺中能帮助和促进焊接过程</li>
<li>清除焊料和被焊母材表面的氧化物，使金属表面达到必要的清洁度（去除氧化物）</li>
<li>去除被焊接材质表面油污、增大焊接面积</li>
<li>防止焊接时表面的再次氧化</li>
<li>降低被焊接材质表面张力</li>
<li>提高焊接性能</li>
<li>辅助热传导</li>
</ul>
<span id="more"></span>

<h1 id="3-常用助焊剂"><a href="#3-常用助焊剂" class="headerlink" title="3. 常用助焊剂"></a>3. 常用助焊剂</h1><h2 id="1-松香"><a href="#1-松香" class="headerlink" title="1. 松香"></a>1. 松香</h2><ul>
<li>固体松树脂制作助焊剂的原材料。</li>
</ul>
<h2 id="2-RMA-223-助焊膏"><a href="#2-RMA-223-助焊膏" class="headerlink" title="2. RMA-223 助焊膏"></a>2. RMA-223 助焊膏</h2><ul>
<li>中度活性之松香型助焊膏，广泛使用电路板的 SMD 返修工艺。</li>
</ul>
<h2 id="3-NC-559-助焊膏"><a href="#3-NC-559-助焊膏" class="headerlink" title="3. NC-559 助焊膏"></a>3. NC-559 助焊膏</h2><ul>
<li>为免洗型助焊膏，残留物颜色非常淡，有极高之 SIR 值，建议用于 BGA、CSP 等球阵焊点返修及补球。</li>
</ul>
<h2 id="4-RMA-223-NC-559-对比图"><a href="#4-RMA-223-NC-559-对比图" class="headerlink" title="4. RMA-223 NC-559 对比图"></a>4. RMA-223 NC-559 对比图</h2><p><img src="https://file.infonet.io/blog-files/Elec/%E5%8A%A9%E7%84%8A%E5%89%82-223-559.png" alt="RMA-223 NC-559 对比图"></p>
<blockquote>
<p>参考文章：电路板的表面绝缘阻抗：SIR<br><a href="https://www.researchmfg.com/2010/11/sir-measurement-for-pcb-2/">https://www.researchmfg.com/2010/11/sir-measurement-for-pcb-2/</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>助焊剂</tag>
      </tags>
  </entry>
  <entry>
    <title>消除共模干扰的方法</title>
    <url>/2019/03/09/%E6%B6%88%E9%99%A4%E5%85%B1%E6%A8%A1%E5%B9%B2%E6%89%B0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<ul>
<li>采用屏蔽双绞线并有效接地</li>
<li>强电场的地方还要考虑采用镀锌管屏蔽</li>
<li>布线时远离高压线，更不能将高压电源线和信号线捆在一起走线</li>
<li>不要和电控锁共用同一个电源</li>
<li>采用线性稳压电源或高品质的开关电源(纹波干扰小于50mV)</li>
</ul>
]]></content>
      <tags>
        <tag>电子</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建个人图床服务器EasyImages2.0</title>
    <url>/2020/03/21/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%9C%8D%E5%8A%A1%E5%99%A8EasyImages2-0/</url>
    <content><![CDATA[<blockquote>
<p>项目地址：<a href="https://github.com/icret/EasyImages2.0">https://github.com/icret/EasyImages2.0</a><br>推荐使用 <a href="https://bt.cn/download/linux.html"><strong>BT 面板</strong></a> 搭建，简单方便。<br>由于我的 VPS 已经搭建了其他网站，为了不影响其他站点，所以我们采用手工搭建。</p>
</blockquote>
<h1 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1. 步骤"></a>1. 步骤</h1><h2 id="1-准备好-VPS-和-域名，并安装-PHP7-2-和-Nginx"><a href="#1-准备好-VPS-和-域名，并安装-PHP7-2-和-Nginx" class="headerlink" title="1. 准备好 VPS 和 域名，并安装 PHP7.2 和 Nginx"></a>1. 准备好 VPS 和 域名，并安装 PHP7.2 和 Nginx</h2><ol>
<li>以 <strong>eg.infonet.io</strong> 为例，以下请将 eg.infonet.io 更新为自己的域名。</li>
<li>详细步骤省略…</li>
</ol>
<h2 id="2-从-Github-下载-EasyImages2-0-源码"><a href="#2-从-Github-下载-EasyImages2-0-源码" class="headerlink" title="2. 从 Github 下载 EasyImages2.0 源码"></a>2. 从 Github 下载 <a href="https://github.com/icret/EasyImages2.0"><strong>EasyImages2.0</strong></a> 源码</h2><ol>
<li><p>创建网站目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /var/www/</span><br><span class="line">$ mkdir eg.infonet.io</span><br></pre></td></tr></table></figure></li>
<li><p>从 Github 克隆项目：<a href="https://github.com/icret/EasyImages2.0">https://github.com/icret/EasyImages2.0</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> eg.infonet.io</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/icret/EasyImages2.0.git</span><br><span class="line">$ ls</span><br><span class="line">EasyImages2.0</span><br></pre></td></tr></table></figure>

<span id="more"></span></li>
</ol>
<h2 id="3-配置网站-Nginx"><a href="#3-配置网站-Nginx" class="headerlink" title="3. 配置网站 Nginx"></a>3. 配置网站 Nginx</h2><ol>
<li><p>进入到配置文件路径：**/etc/nginx/conf.d/**</p>
</li>
<li><p>新建配置文件 <strong>eg.infonet.io.conf</strong> 内容如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line"><span class="code">        listen 80;</span></span><br><span class="line"><span class="code">        listen [::]:80;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">        server_name eg.infonet.io;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">        root /var/www/eg.infonet.io/EasyImages2.0;</span></span><br><span class="line"><span class="code">        index index.php;</span></span><br><span class="line"><span class="code">        autoindex off;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">        location / &#123;</span></span><br><span class="line"><span class="code">                try_files $uri $uri/ =404;</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">        location ~ \.php$ &#123;</span></span><br><span class="line"><span class="code">                include /etc/nginx/fastcgi_params;</span></span><br><span class="line"><span class="code">                fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line"><span class="code">                fastcgi_index index.php;</span></span><br><span class="line"><span class="code">                fastcgi_param SCRIPT_FILENAME /var/www/eg.infonet.io/EasyImages2.0/$fastcgi_script_name;</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">        location ~ /\.ht &#123;</span></span><br><span class="line"><span class="code">                deny all;</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="4-检查服务器是否支持本程序"><a href="#4-检查服务器是否支持本程序" class="headerlink" title="4. 检查服务器是否支持本程序"></a>4. 检查服务器是否支持本程序</h2><ol>
<li><p>网页打开：<a href="http://eg.infonet.io/check.php">http://eg.infonet.io/check.php</a></p>
<p><img src="https://img.infonet.io/i/2020/03/08/nvylxa.png" alt="EasyImage-check.php"></p>
</li>
<li><p>如图可知 GD 库、zip、mbstring 扩展未安装。</p>
</li>
<li><p>安装扩展：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt install php7.2-gd</span><br><span class="line">$ apt install php7.2-mbstring</span><br><span class="line">$ apt install php7.2-zip</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="5-设置目录权限"><a href="#5-设置目录权限" class="headerlink" title="5. 设置目录权限"></a>5. 设置目录权限</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chmod -R 777 /var/www/eg.infonet.io/i/*</span><br></pre></td></tr></table></figure>

<h2 id="6-更改图床配置"><a href="#6-更改图床配置" class="headerlink" title="6. 更改图床配置"></a>6. 更改图床配置</h2><ol>
<li>更改服务器配置文件：/var/www/eg.infonet.io/EasyImages2.0/config.php</li>
</ol>
<h1 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="2. 注意事项"></a>2. 注意事项</h1><ol>
<li>不能开启水印，否则会提示上传失败，但是进入后台查看同一张图片在服务器中会存储 <strong>4</strong> 份。</li>
<li>我的服务器是 512M 内存，当上传图片超过 <strong>1M</strong> 时会上传失败。</li>
</ol>
<blockquote>
<p>参考链接：<a href="https://wizardforcel.gitbooks.io/nginx-doc/content/Text/6.3_nginx_ubuntu.html">https://wizardforcel.gitbooks.io/nginx-doc/content/Text/6.3_nginx_ubuntu.html</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>邮箱托管服务商介绍</title>
    <url>/2020/03/21/%E9%82%AE%E7%AE%B1%E6%89%98%E7%AE%A1%E6%9C%8D%E5%8A%A1%E5%95%86%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="1-Google-G-Suite"><a href="#1-Google-G-Suite" class="headerlink" title="1. Google(G Suite)"></a>1. <a href="https://gsuite.google.com/">Google(G Suite)</a></h1><ul>
<li>体验好</li>
<li>贵</li>
</ul>
<blockquote>
<p>个人觉得最好当然是 Google 莫属了，但是没有免费版的，最便宜版的要 <strong>$6/月/用户</strong>。<br>对于想使用免费版企业邮箱就不行了，土豪除外。</p>
</blockquote>
<h1 id="2-ZOHO"><a href="#2-ZOHO" class="headerlink" title="2. ZOHO"></a>2. <a href="https://www.zoho.com.cn/mail/">ZOHO</a></h1><ul>
<li>邮箱登陆：<a href="https://www.zoho.com.cn/mail/">https://www.zoho.com.cn/mail/</a></li>
<li>功能丰富</li>
<li>UI 好看</li>
<li>操作好</li>
<li>邮箱容量 5G/用户</li>
<li>支持多域名绑定</li>
<li>支持邮件转发、邮件召回</li>
<li>免费版的可添加 5 个用户</li>
<li>支持邮箱别名</li>
<li>国内最便宜的 <strong>￥50/用户/年</strong></li>
<li>国际版不支持中文，价格 <strong>$1/用户/月</strong></li>
<li>POP/IMAP/SMTP/转发 需要收费</li>
<li>最大只能添加 25M 附件</li>
</ul>
<span id="more"></span>

<h1 id="3-阿里企业邮"><a href="#3-阿里企业邮" class="headerlink" title="3. 阿里企业邮"></a>3. <a href="https://wanwang.aliyun.com/mail/freemail/">阿里企业邮</a></h1><ul>
<li>邮箱登录：<a href="https://qiye.aliyun.com/">https://qiye.aliyun.com/</a></li>
<li>现在购买可免费使用5年（仅限中国站，国际站没有免费的）</li>
<li>可以添加 50 个用户</li>
<li>添加用户不用绑定手机号</li>
<li>客户端支持 Win 和 MacOS</li>
<li>邮箱容量 5G/用户</li>
<li>第一次操作感觉会有些复杂</li>
<li>通过 Gmail 代发阿里企业邮时有 Bug</li>
</ul>
<h1 id="4-腾讯企业邮"><a href="#4-腾讯企业邮" class="headerlink" title="4. 腾讯企业邮"></a>4. <a href="https://exmail.qq.com/">腾讯企业邮</a></h1><ul>
<li>邮箱登录：<a href="https://exmail.qq.com/login">https://exmail.qq.com/login</a></li>
<li>免费</li>
<li>操作简易</li>
<li>添加多个新用户需要绑定手机号和微信号</li>
<li>邮箱容量 1G/用户</li>
</ul>
<blockquote>
<p>刚开始自己使用的是腾讯企业邮，邮箱容量有 <strong>2G/用户</strong> 的使用空间，但是现在变成 <strong>1G/用户</strong> 了。<br>以前添加新用户是可以随便添加的，现在却不行了。添加新用户需要绑定手机号绑定微信，要不然添加不了，不知道为什么改版了后限制这么多。</p>
</blockquote>
<h1 id="5-Yandex"><a href="#5-Yandex" class="headerlink" title="5. Yandex"></a>5. <a href="https://connect.yandex.com/pdd/">Yandex</a></h1><ul>
<li>免费</li>
<li>邮箱容量大</li>
<li>可添加 1000 个邮箱</li>
<li>不支持中文</li>
<li>反应慢，翻墙会快点</li>
</ul>
<blockquote>
<p>一家俄罗斯互联网搜索引擎，有近 60% 的市场。</p>
</blockquote>
<h1 id="6-Gandi"><a href="#6-Gandi" class="headerlink" title="6. Gandi"></a>6. <a href="https://www.gandi.net/zh-Hans/domain/email">Gandi</a></h1><ul>
<li>无限制的别名与邮件转址</li>
<li>最便宜 <strong>￥2/用户/月</strong></li>
<li>2 个免费的标准信箱</li>
</ul>
<blockquote>
<p>没用过，主要是域名注册和服务器托管服务商。</p>
</blockquote>
<h1 id="7-Microsoft"><a href="#7-Microsoft" class="headerlink" title="7. Microsoft"></a>7. <a href="https://products.office.com/zh-cn/exchange/email">Microsoft</a></h1><blockquote>
<p>官网反应速率较慢（可能是我网络的原因），微软的也不怎么喜欢，收费还不便宜，<strong>￥29/用户/月</strong>，不推荐。</p>
</blockquote>
<h1 id="8-网易企业邮"><a href="#8-网易企业邮" class="headerlink" title="8. 网易企业邮"></a>8. 网易企业邮</h1><blockquote>
<p>最开始的时候就体验过，强烈不推荐，广告太多特别讨厌。</p>
</blockquote>
<h1 id="9-其他邮箱"><a href="#9-其他邮箱" class="headerlink" title="9. 其他邮箱"></a>9. 其他邮箱</h1><ul>
<li><a href="https://www.mailgun.com/">Mailgun</a></li>
<li><a href="https://www.migadu.com/">Migadu</a></li>
<li><a href="https://pingly.com/">Pingly</a></li>
<li><a href="https://www.serverlaunch.com/email/">ServerLaunch</a></li>
<li><a href="https://mxroute.com/">Mxroute</a></li>
<li><a href="https://www.fastmail.com/">Fastmail</a> (30 天试用)</li>
<li><a href="https://www.hover.com/email">Hover</a></li>
</ul>
<h2 id="10-域名邮箱一览表"><a href="#10-域名邮箱一览表" class="headerlink" title="10. 域名邮箱一览表"></a>10. 域名邮箱一览表</h2><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">Zoho</th>
<th align="center">Yandex</th>
<th align="center">阿里</th>
<th align="center">腾讯</th>
<th align="center">Migadu</th>
<th align="center">Pingly</th>
<th align="center">Hostiero</th>
<th align="center">网易</th>
</tr>
</thead>
<tbody><tr>
<td align="center">域名数量</td>
<td align="center">1</td>
<td align="center">不限</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">用户数量</td>
<td align="center">5</td>
<td align="center">1000</td>
<td align="center">50</td>
<td align="center">200</td>
<td align="center">不限</td>
<td align="center">不限</td>
<td align="center">3</td>
<td align="center">180</td>
</tr>
<tr>
<td align="center">邮箱别名</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">邮箱容量</td>
<td align="center">5G</td>
<td align="center">不限</td>
<td align="center">5G</td>
<td align="center">1G</td>
<td align="center">1G</td>
<td align="center">5G</td>
<td align="center">1G</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">两步验证</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">Catch All</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
</tr>
<tr>
<td align="center">POP3</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">IMAP</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">SMTP</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">Exchange</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
<td align="center">支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
<td align="center">不支持</td>
</tr>
</tbody></table>
<blockquote>
<p><em>仅供参考</em></p>
</blockquote>
<h1 id="11-参考网址"><a href="#11-参考网址" class="headerlink" title="11. 参考网址"></a>11. 参考网址</h1><ul>
<li><a href="https://www.httpsmail.com/zoho-china-free-email-hosting.html">https://www.httpsmail.com/zoho-china-free-email-hosting.html</a></li>
<li><a href="https://www.httpsmail.com/hosting/">https://www.httpsmail.com/hosting/</a></li>
<li><a href="https://www.v2ex.com/t/576522">https://www.v2ex.com/t/576522</a></li>
</ul>
]]></content>
      <tags>
        <tag>域名邮箱</tag>
      </tags>
  </entry>
  <entry>
    <title>网站免费申请SSL证书</title>
    <url>/2020/03/21/%E7%BD%91%E7%AB%99%E5%85%8D%E8%B4%B9%E7%94%B3%E8%AF%B7SSL%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<blockquote>
<p>以下用 <strong>Certbot+Nginx+Ubuntu18.04</strong> 为例：</p>
</blockquote>
<h1 id="1-简单总结"><a href="#1-简单总结" class="headerlink" title="1. 简单总结"></a>1. 简单总结</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下一次继续添加证书的时候就用如下命令：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 自动运行</span></span><br><span class="line">$ sudo certbot --nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 选择对应的网址。</span></span><br><span class="line">Which names would you like to activate HTTPS <span class="keyword">for</span>?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">1: infonet.io</span><br><span class="line">Select the appropriate numbers separated by commas and/or spaces, or leave input</span><br><span class="line">blank to select all options shown (Enter <span class="string">&#x27;c&#x27;</span> to cancel): 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 请选择 2: 重定向。</span></span><br><span class="line">Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">1: No redirect - Make no further changes to the webserver configuration.</span><br><span class="line">2: Redirect - Make all requests redirect to secure HTTPS access. Choose this <span class="keyword">for</span></span><br><span class="line">new sites, or <span class="keyword">if</span> you<span class="string">&#x27;re confident your site works on HTTPS. You can undo this</span></span><br><span class="line"><span class="string">change by editing your web server&#x27;</span>s configuration.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Select the appropriate number [1-2] <span class="keyword">then</span> [enter] (press <span class="string">&#x27;c&#x27;</span> to cancel): 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 出现如下信息表示 SSL 证书配置成功。</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Congratulations! You have successfully enabled https://infonet.io</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h1 id="2-详细讲解"><a href="#2-详细讲解" class="headerlink" title="2. 详细讲解"></a>2. 详细讲解</h1><h2 id="1-SSH-into-the-server"><a href="#1-SSH-into-the-server" class="headerlink" title="1. SSH into the server"></a>1. SSH into the server</h2><p>SSH into the server running your HTTP website as a user with sudo privileges.</p>
<h2 id="2-Add-Certbot-PPA"><a href="#2-Add-Certbot-PPA" class="headerlink" title="2. Add Certbot PPA"></a>2. Add Certbot PPA</h2><p>You’ll need to add the Certbot PPA to your list of repositories. To do so, run the following commands on the command line on the machine:</p>
   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install software-properties-common</span><br><span class="line">$ sudo add-apt-repository universe</span><br><span class="line">$ sudo add-apt-repository ppa:certbot/certbot</span><br><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure>

<h2 id="3-Install-Certbot"><a href="#3-Install-Certbot" class="headerlink" title="3. Install Certbot"></a>3. Install Certbot</h2><p>Run this command on the command line on the machine to install Certbot.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install certbot python-certbot-nginx</span><br></pre></td></tr></table></figure>

<h2 id="4-Choose-how-you’d-like-to-run-Certbot"><a href="#4-Choose-how-you’d-like-to-run-Certbot" class="headerlink" title="4. Choose how you’d like to run Certbot"></a>4. Choose how you’d like to run Certbot</h2><ul>
<li><p>Either get and install your certificates…</p>
<p>Run this command to get a certificate and have Certbot edit your Nginx configuration automatically to serve it, turning on HTTPS access in a single step.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo certbot --nginx</span><br></pre></td></tr></table></figure></li>
<li><p>Or, just get a certificate</p>
<p>If you’re feeling more conservative and would like to make the changes to your Nginx configuration by hand, run this command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo certbot certonly --nginx</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="5-Test-automatic-renewal"><a href="#5-Test-automatic-renewal" class="headerlink" title="5. Test automatic renewal"></a>5. Test automatic renewal</h2><p>The Certbot packages on your system come with a cron job or systemd timer that will renew your certificates automatically before they expire. You will not need to run Certbot again, unless you change your configuration. You can test automatic renewal for your certificates by running this command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo certbot renew --dry-run</span><br></pre></td></tr></table></figure>

<p>The command to renew certbot is installed in one of the following locations:</p>
<ul>
<li><code>/etc/crontab/</code></li>
<li><code>/etc/cron.*/*</code></li>
<li><code>systemctl list-timers</code></li>
</ul>
<h2 id="6-Confirm-that-Certbot-worked"><a href="#6-Confirm-that-Certbot-worked" class="headerlink" title="6. Confirm that Certbot worked"></a>6. Confirm that Certbot worked</h2><p>To confirm that your site is set up properly, visit <code>https://yourwebsite.com/</code> in your browser and look for the lock icon in the URL bar. If you want to check that you have the top-of-the-line installation, you can head to <a href="https://www.ssllabs.com/ssltest/">https://www.ssllabs.com/ssltest/</a>.</p>
<blockquote>
<p>参考链接：</p>
<ol>
<li>Certbot：<a href="https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx">https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx</a></li>
<li>重定向：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Redirections">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Redirections</a></li>
</ol>
</blockquote>
]]></content>
      <tags>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>车牌号码含义</title>
    <url>/2019/10/10/%E8%BD%A6%E7%89%8C%E5%8F%B7%E7%A0%81%E5%90%AB%E4%B9%89/</url>
    <content><![CDATA[<h1 id="广东省（粤）"><a href="#广东省（粤）" class="headerlink" title="广东省（粤）"></a>广东省（粤）</h1><p>粤A 广州，粤B 深圳，粤C 珠海，粤D 汕头，粤E 佛山，粤F 韶关，粤G 湛江，粤H 肇庆，粤J 江门，粤K 茂名，粤L 惠州，粤M 梅州，粤N 汕尾，粤P 河源，粤Q 阳江，粤R 清远，粤S 东莞，粤T 中山，粤U 潮州，粤V 揭阳，粤W 云浮，粤X 顺德，粤Y 南海，粤Z 港澳进入内地车辆</p>
<span id="more"></span>

<h1 id="湖北省（鄂）"><a href="#湖北省（鄂）" class="headerlink" title="湖北省（鄂）"></a>湖北省（鄂）</h1><p>鄂A 武汉，鄂B 黄石，鄂C 十堰，鄂D 沙市，鄂E 宜昌，鄂F 襄樊，鄂G 鄂州，鄂H 荆门，鄂J 黄岗，鄂K 孝感，鄂L 咸宁，鄂M 荆州，鄂N 郧阳，鄂P 宜昌，鄂Q 鄂西州</p>
<h1 id="黑龙江省（黑）"><a href="#黑龙江省（黑）" class="headerlink" title="黑龙江省（黑）"></a>黑龙江省（黑）</h1><p>黑A 哈尔滨，黑B 齐齐哈尔，黑C 牡丹江，黑D 佳木斯，黑D 佳木斯， 黑F 伊春，黑G 鸡西， 黑H 鹤岗， 黑J 双鸭山，黑K 七台河，黑M 绥化， 黑N 黑河，黑L 松花江行署，黑P 大兴安岭地区，黑R 农恳系统</p>
<h1 id="河南省（豫）"><a href="#河南省（豫）" class="headerlink" title="河南省（豫）"></a>河南省（豫）</h1><p>豫A 郑州，豫B 开封，豫C 洛阳，豫D 平顶山，豫E 安阳，豫F 鹤壁，豫G 新乡，豫H 焦作，豫J 濮阳，豫K 许昌，豫L 漯河，豫M 三门峡，豫N 商丘，豫P 周口，豫Q 驻马店，豫R 南阳，豫S 信阳，豫U 济源</p>
<h1 id="浙江省（浙）"><a href="#浙江省（浙）" class="headerlink" title="浙江省（浙）"></a>浙江省（浙）</h1><p>浙A 杭州，浙B 宁波，浙C 温州，浙D 绍兴，浙E 湖州，浙F 嘉兴，浙G 金华，浙H 衢州，浙J 台州，浙K 丽水，浙L 舟山</p>
<h1 id="江苏省（苏）"><a href="#江苏省（苏）" class="headerlink" title="江苏省（苏）"></a>江苏省（苏）</h1><p>苏A 南京，苏B 无锡，苏C 徐州，苏D 常州，苏E 苏州，苏F 南通，苏G 连云港，苏H 淮安，苏J 盐城，苏K 扬州，苏L 镇江，苏M 泰州，苏N 宿迁</p>
<h1 id="山东省（鲁）"><a href="#山东省（鲁）" class="headerlink" title="山东省（鲁）"></a>山东省（鲁）</h1><p>鲁A 济南，鲁B 青岛，鲁C 淄博，鲁D 枣庄，鲁E 东营，鲁F 烟台，鲁G 潍坊，鲁H 济宁，鲁J 泰安，鲁K 威海，鲁L 日照，鲁M 莱芜，鲁N 德州，鲁P 聊城，鲁Q 临沂，鲁R 菏泽，鲁U 青岛开发区</p>
<h1 id="安徽省（皖）"><a href="#安徽省（皖）" class="headerlink" title="安徽省（皖）"></a>安徽省（皖）</h1><p>皖A 合肥，皖B 芜湖，皖C 蚌埠，皖D 淮南，皖E 马鞍山，皖F 淮北，皖G 铜陵，皖E 安庆，皖J 黄山，皖K 阜阳，皖L 宿州，皖M 滁州，皖N 六安，皖P 宣城，皖Q 巢湖，皖R 池州，皖S 亳州</p>
<h1 id="福建省（闽）"><a href="#福建省（闽）" class="headerlink" title="福建省（闽）"></a>福建省（闽）</h1><p>闽A 福州，闽B 莆田，闽C 泉州，闽D 厦门，闽E 漳州，闽F 龙岩，闽G 三明，闽H 南平，闽J 宁德，闽K 省直机关</p>
<h1 id="广西壮族（桂）"><a href="#广西壮族（桂）" class="headerlink" title="广西壮族（桂）"></a>广西壮族（桂）</h1><p>桂A 南宁，桂B 柳州，桂C 桂林，桂D 梧州，桂E 北海，桂F 南宁，桂G 柳州，桂H 桂林，桂J 贺州(属梧州)，桂K 玉林，桂M 河池，桂L 百色，桂N 钦州，桂P 防城</p>
<h1 id="甘肃省（甘）"><a href="#甘肃省（甘）" class="headerlink" title="甘肃省（甘）"></a>甘肃省（甘）</h1><p>甘A 兰州，甘B 嘉峪关，甘C 金昌，甘D 白银，甘E 天水，甘F 酒泉，甘G 张掖，甘H 武威，甘J 定西，甘K 陇南，甘L 平凉，甘M 庆阳，甘N 临夏回族，甘P 甘南藏族</p>
<h1 id="山西省（晋）"><a href="#山西省（晋）" class="headerlink" title="山西省（晋）"></a>山西省（晋）</h1><p>晋A 太原，晋B 大同，晋C 阳泉，晋D 长治，晋E 晋城，晋F 朔州，晋H 忻州，晋J 吕梁，晋K 晋中，晋L 临汾，晋M 运城</p>
<h1 id="内蒙古（蒙）"><a href="#内蒙古（蒙）" class="headerlink" title="内蒙古（蒙）"></a>内蒙古（蒙）</h1><p>蒙A 呼和浩特，蒙B 包头，蒙C 乌海，蒙D 赤峰，蒙E 呼伦贝尔盟，蒙F 兴安盟，蒙G 锡林郭勒盟，蒙H 乌兰察布盟，蒙J 伊克昭盟，蒙K 巴彦淖尔盟，蒙L 阿拉善盟</p>
<h1 id="陕西省（陕）"><a href="#陕西省（陕）" class="headerlink" title="陕西省（陕）"></a>陕西省（陕）</h1><p>陕A 西安，陕B 铜川，陕C 宝鸡，陕D 威阳，陕E 渭南，陕F 汉中，陕G 安康，陕H 商洛，陕J 延安，陕K 榆林，陕U 省直机关</p>
<h1 id="吉林省（吉）"><a href="#吉林省（吉）" class="headerlink" title="吉林省（吉）"></a>吉林省（吉）</h1><p>吉A 长春，吉B 吉林，吉C 四平，吉D 辽源，吉E 通化，吉F 白山，吉G 白城，吉H 延边朝鲜族</p>
<h1 id="贵州省（贵）"><a href="#贵州省（贵）" class="headerlink" title="贵州省（贵）"></a>贵州省（贵）</h1><p>贵A 贵阳，贵B 六盘水，贵C 遵义，贵D 铜仁，贵E 黔西南州，贵F 毕节，贵G 安顺，贵H 黔东南州，贵J 黔南州</p>
<h1 id="青海省（青）"><a href="#青海省（青）" class="headerlink" title="青海省（青）"></a>青海省（青）</h1><p>青A 西宁，青B 海东，青C 海北，青D 黄南，青E 海南州，青F 果洛州，青G 玉树州，青H 海西州</p>
<h1 id="西藏（藏）"><a href="#西藏（藏）" class="headerlink" title="西藏（藏）"></a>西藏（藏）</h1><p>藏A 拉萨，藏B 昌都，藏C 山南，藏D ******，藏E ****，藏F 阿里，藏G 林芝</p>
<h1 id="四川省（川）"><a href="#四川省（川）" class="headerlink" title="四川省（川）"></a>四川省（川）</h1><p>川A 成都，川B 绵阳，川C 自贡，川D 攀枝花，川E 泸州，川F 德阳，川H 广元，川J 遂宁，川K 内江，川L 乐山，川Q 宜宾，川R 南充，川S 达县，川T 雅安，川U 阿坝藏族，川V ****藏族，川W 凉山彝族，川Z 眉山</p>
]]></content>
      <tags>
        <tag>车牌</tag>
      </tags>
  </entry>
  <entry>
    <title>电磁兼容介绍</title>
    <url>/2021/04/04/%E7%94%B5%E7%A3%81%E5%85%BC%E5%AE%B9%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="1-分类"><a href="#1-分类" class="headerlink" title="1.分类"></a>1.分类</h1><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>EMC 电磁兼容</td>
<td>EMI 电磁干扰</td>
<td>CE 传到干扰</td>
<td>电源线、控制线、天线端口</td>
</tr>
<tr>
<td></td>
<td></td>
<td>RE 辐射干扰</td>
<td>电场、磁场</td>
</tr>
<tr>
<td></td>
<td>EMS 电磁抗扰度</td>
<td>CS 传导抗扰</td>
<td>电源线/信号线（射频、瞬态）、天线端口</td>
</tr>
<tr>
<td></td>
<td></td>
<td>RS 辐射抗扰</td>
<td>电场、磁场</td>
</tr>
<tr>
<td></td>
<td></td>
<td>ESD 静电放电</td>
<td></td>
</tr>
</tbody></table>
<h1 id="2-名词介绍"><a href="#2-名词介绍" class="headerlink" title="2.名词介绍"></a>2.名词介绍</h1><p>EMC：即电磁兼容，指电气及电子设备在共同的电磁环境中能够执行各自功能的共存状态，即要求在同一电磁环境中各种设备都能正常工作又互不干扰，达到“兼容”的状态。<br>EMI：即电磁干扰，指电磁波与电子元器件作用后而产生的干扰现象，有传导干扰和辐射干扰两种。<br>EMS：即电磁敏感度，指电子设备受到电磁干扰的敏感程度。<br>ESD：即静电释放，用于静电防护的器材统称为ESD，中文名称静电阻抗器。</p>
<h1 id="3-三要素三规律"><a href="#3-三要素三规律" class="headerlink" title="3.三要素三规律"></a>3.三要素三规律</h1><p>产生EMC问题的三个要素是：<strong>电磁干扰源</strong>、<strong>耦合途径</strong>、<strong>敏感设备</strong>。</p>
<p>规律一、EMC费效比关系规律： EMC问题越早考虑、越早解决，费用越小、效果越好。<br>规律二、高频电流环路面积S越大, EMI辐射越严重。<br>规律三、环路电流频率f越高，引起的EMI辐射越严重，电磁辐射场强随电流频率f的平方成正比增大。</p>
<h1 id="4-措施"><a href="#4-措施" class="headerlink" title="4.措施"></a>4.措施</h1><p>1、传输通道抑制：具体的方法有滤波、屏蔽、接地、搭接、合理的布线；<br>2、空间分离：即通过加大骚扰源和敏感电路间的距离，抑制空间辐射骚扰和感应耦合骚扰的有效方法；<br>3、时间分离：有用信号在干扰信号发射时短暂关闭，而在干扰信号停止的时间内传输；<br>4、频谱处理：频谱改变、展频技术；<br>5、电气隔离：光电隔离、继电器隔离、变压器隔离、DC/DC变换。</p>
]]></content>
      <tags>
        <tag>EMC</tag>
      </tags>
  </entry>
  <entry>
    <title>部署Hexo</title>
    <url>/2020/03/21/%E9%83%A8%E7%BD%B2Hexo/</url>
    <content><![CDATA[<blockquote>
<p><strong>Linux 用户</strong></p>
</blockquote>
<h1 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1. 安装 Git"></a>1. 安装 <a href="https://git-scm.com/">Git</a></h1><blockquote>
<p>此处省略。</p>
</blockquote>
<h1 id="2-安装-Node-js-和-npm"><a href="#2-安装-Node-js-和-npm" class="headerlink" title="2. 安装 Node.js 和 npm"></a>2. 安装 <a href="https://nodejs.org/en/">Node.js</a> 和 <a href="https://www.npmjs.com/">npm</a></h1><blockquote>
<p><strong>这里推荐从 <a href="https://github.com/nvm-sh/nvm">nvm</a> 安装。</strong></p>
</blockquote>
<ol>
<li><p>安装或者更新 nvm(v0.35.2):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash</span><br></pre></td></tr></table></figure></li>
<li><p>修改环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一步：</span></span><br><span class="line">$ <span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="subst">$([ -z <span class="string">&quot;<span class="variable">$&#123;XDG_CONFIG_HOME-&#125;</span>&quot;</span> ] &amp;&amp; printf %s <span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>/.nvm&quot;</span> || printf %s <span class="string">&quot;<span class="variable">$&#123;XDG_CONFIG_HOME&#125;</span>/nvm&quot;</span>)</span>&quot;</span></span><br><span class="line"><span class="comment"># 第二步：</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>    <span class="comment"># This loads nvm</span></span><br></pre></td></tr></table></figure></li>
<li><p>验证是否已经安装 nvm 输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">command</span> -v nvm</span><br><span class="line">nvm</span><br><span class="line"><span class="comment"># 若输出 nvm 代表安装成功。请注意 which nvm 将不起作用。Since nvm is a sourced shell function, not an executable binary.</span></span><br></pre></td></tr></table></figure></li>
<li><p>安装 Node.js 和 npm</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nvm install node</span><br><span class="line"><span class="comment"># 安装 Node.js 时会一起安装 npm.</span></span><br></pre></td></tr></table></figure></li>
<li><p>更多请查看 nvm GitHub 主页。</p>
<p><a href="https://github.com/nvm-sh/nvm">https://github.com/nvm-sh/nvm</a></p>
</li>
</ol>
<h1 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3. 安装 Hexo"></a>3. 安装 <a href="https://hexo.io/">Hexo</a></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<h1 id="4-使用-Hexo"><a href="#4-使用-Hexo" class="headerlink" title="4. 使用 Hexo"></a>4. 使用 <a href="https://hexo.io/">Hexo</a></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;    <span class="comment"># 新建一篇文章</span></span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s    <span class="comment"># 生成静态文件并启动本地服务器</span></span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d    <span class="comment"># 生成静态文件并本地部署</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>更多请看 Hexo 基础命令章节或者请看官网教程: <a href="https://hexo.io/">https://hexo.io/</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>频率与周期对应关系</title>
    <url>/2020/05/05/%E9%A2%91%E7%8E%87%E4%B8%8E%E5%91%A8%E6%9C%9F%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<p><img src="https://file.infonet.io/blog-files/Elec/%E9%A2%91%E7%8E%87%E4%B8%8E%E5%91%A8%E6%9C%9F%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.png" alt="频率与周期对应关系"></p>
]]></content>
      <tags>
        <tag>周期频率</tag>
      </tags>
  </entry>
  <entry>
    <title>高速信号PCB设计</title>
    <url>/2021/04/04/%E9%AB%98%E9%80%9F%E4%BF%A1%E5%8F%B7PCB%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<blockquote>
<p>高速信号PCB阻抗设计要求</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">高速信号</th>
<th align="center">阻抗要求</th>
<th align="center">误差</th>
<th align="center">走线</th>
</tr>
</thead>
<tbody><tr>
<td align="center">DDR</td>
<td align="center">100Ω</td>
<td align="center">±10%</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">eMMC</td>
<td align="center">50Ω</td>
<td align="center">±10%</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">PCIe</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">USB</td>
<td align="center">90Ω</td>
<td align="center">±10%</td>
<td align="center">差分</td>
</tr>
<tr>
<td align="center">HDMI</td>
<td align="center">100Ω</td>
<td align="center">±10%</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">eDP</td>
<td align="center">90Ω</td>
<td align="center">±10%</td>
<td align="center">差分</td>
</tr>
<tr>
<td align="center">MIPI</td>
<td align="center">100Ω</td>
<td align="center">±10%</td>
<td align="center">差分</td>
</tr>
<tr>
<td align="center">SDIO/SDMMC</td>
<td align="center">50Ω</td>
<td align="center">±10%</td>
<td align="center"></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>PCB</tag>
        <tag>高速信号</tag>
      </tags>
  </entry>
</search>
